<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: 283790 Maintainer: ae Status: ready -->
 <chapter xml:id="introduction" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <info><title>Introdução</title></info>

  <section xml:id="intro-whatis">
   <info><title>O que é PHP?</title></info>
   <para>
    PHP (um acrônimo recursivo para <literal>PHP: Hypertext Preprocessor</literal>)
    é uma linguagem de script open source de uso geral, muito
    utilizada e especialmente guarnecida para o desenvolvimento
    de aplicações Web embútivel dentro do HTML.
   </para>
   <para>
    Ótimo, mas o que isso significa?
   </para>
   <para>
    <example>
     <info><title>Um exemplo introdutório</title></info>
     <programlisting role="php">
<![CDATA[
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
  "http://www.w3.org/TR/html4/loose.dtd">
<html>
    <head>
        <title>Exemplo</title>
    </head>
    <body>

        <?php
        echo "Olá, Eu sou um script PHP!";
        ?>

    </body>
</html>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    Ao invés de muitos comandos para mostrar HTML (como visto em C ou Perl),
    páginas PHP contém HTML juntamente com códigos que fazem "alguma coisa"
    (neste caso, mostra "Olá, Eu sou um script PHP!")
    O código PHP é delimitado por <link
    linkend="language.basic-syntax.phpmode">tags iniciais e finais
    <code>&lt;?php</code> e <code>?&gt;</code></link>    
    que lhe permitem pular pra dentro e pra fora do "modo PHP".
   </para>
   <para>
    O que distingui o PHP de algo como Javascript no lado do cliente
    é que o código é executado no servidor, gerando HTML que é então
    enviado para o cliente. O cliente receberia os resultados da execução 
    desse script, mas não saberia como é o código fonte. 
    Você pode inclusive configurar seu servidor para processar todos os seus 
    arquivos HTML como PHP, e então não haverá nenhum modo dos usuários descobrirem
    que se você usa essa linguagem ou não.
   </para>
   <para>
    A melhor coisa em usar PHP está no fato de ele ser extremamente simples
    para um iniciante, mas oferece muitos recursos para
    o programador profissional. Não se preocupe em ler as longas
    listas de funções do PHP. Você pode pular essa parte (por enquanto) e
    começar a escrever scripts em poucas horas.
   </para>
   <para>
    Apesar do desenvolvimento do PHP ser focado nos scripts do lado do servidor,
    você pode fazer muito mais com ele. Veja isso e leia mais na seção
    <link linkend="intro-whatcando">O que o PHP pode fazer?</link>,
    ou diretamente no <link linkend="tutorial">tutorial
    introdutório</link> se você estiver interessado em programação web.
   </para>
  </section>

  <section xml:id="intro-whatcando">
   <info><title>O que o PHP pode fazer?</title></info>
   <para>
    Qualquer coisa. O PHP é focado para ser uma linguagem de script do lado do servidor,
    portanto, você pode fazer qualquer coisa que outro programa CGI pode fazer, como:
    coletar dados de formulários, gerar páginas com conteúdo dinâmico ou
    enviar e receber cookies. Mas o PHP pode fazer muito mais.
   </para>
   <para>
    Esses são os maiores campos onde os scripts PHP podem ser utilizados:
    <itemizedlist>
     <listitem>
      <simpara>
       Script no lado do servidor (server-side). Este é o mais tradicional
       e principal campo de atuação do PHP. Você precisa de três coisas
       para seu trabalho. O interpretador do PHP (como CGI ou módulo),
       um servidor web e um browser. Basta
       rodar o servidor web conectado a um PHP instalado.
       Você pode acessar os resultados de seu programa PHP com um browser,
       visualizando a página PHP através do servidor web. Todos eles podem
       rodar na sua máquina, em casa, para você experimentar
       programação com o PHP. Veja a seção das
       <link linkend="install"> instruções de instalação</link>
       para mais informações.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Script de linha de comando. Você pode fazer um script PHP
       funcionar sem um servidor web ou browser.
       A única coisa necessária é o interpretador.
       Esse tipo de uso é ideal para script executados
       usando o <literal>cron</literal> ou o Agendador de Tarefas (no
       Windows). Esses scripts podem ser usados também para
       rotinas de processamento de texto. Veja a seção
       <link linkend="features.commandline">Utilizando o PHP em
       linha de comando</link> para maiores informações.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Escrevendo aplicações desktop. O PHP provavelmente
       não é a melhor linguagem para criação de aplicações
       desktop com interfaces gráficas, mas se você conhece
       bem o PHP, e gostaria de usar alguns dos
       seus recursos avançados nas suas aplicações do lado do cliente,
       você pode usar o PHP-GTK para escrever programas assim. Isso ainda lhe
       habilita a escrever aplicações multi-plataformas.
       O PHP-GTK é uma extensão do PHP, não disponibilizada na
       distribuição oficial. Caso esteja interessado
       no PHP-GTK, visite <link xlink:href="&url.php.gtk;">o
       site do projeto</link>.
      </simpara>
     </listitem>
    </itemizedlist>
   </para>
   <para>
    O PHP pode ser utilizado na maioria dos sistemas operacionais, incluindo
    Linux, várias variantes Unix (incluindo HP-UX, Solaris e OpenBSD),
    Microsoft Windows, Mac OS X, RISC OS, e provavelmente outros.
    O PHP também é suportado pela maioria dos servidores web atuais,
    incluindo Apache, Microsoft Internet Information Server,
    Personal Web Server, Netscape and iPlanet Servers, Oreilly
    Website Pro Server, Caudium, Xitami, OmniHTTPd, e muitos
    outros. O PHP pode ser configurado como módulo para a maioria dos servidores,
    e para os outros como um CGI comum.<!--(repetitivo) PHP can work
    as a CGI processor.-->
   </para>
   <para>
    Com o PHP, portanto, você tem a liberdade para escolher o sistema
    operacional e o servidor web. Do mesmo modo, você pode escolher entre
    utilizar programação estrutural ou programação orientada a objeto,
    ou ainda uma mistura deles. Mesmo sem todos
    os recursos da POO (Programação Orientada a Objetos) implementados no PHP 4,
    muitas bibliotecas de código e grandes aplicações (incluindo a
    biblioteca PEAR) são escritas somente em código POO. O PHP 5 corrige
    as fraquezas da POO do PHP 4, e introduz um modelo de objetos
    completo.
   </para>
   <para>
    Com PHP você não está limitado a gerar somente HTML. As habilidades
    do PHP incluem geração de imagens, arquivos PDF e animações Flash
    (utilizando libswf ou Ming) criados dinamicamente, on the fly. Você pode
    facilmente criar qualquer padrão texto, como XHTML e outros arquivos XML.
    O PHP pode gerar esses padrões e os salvar no sistema de arquivos,
    em vez de imprimi-los, formando um cache dinâmico de suas informações
    no lado do servidor.
   </para>
   <para>
    Talvez a mais forte e mais significativa característica do PHP é seu
    suporte a uma ampla variedade de banco de dados. Escrever uma página que consulte
    um banco de dados é incrivelmente simples. Os seguintes bancos de dados são atualmente
    suportados:
    <blockquote>
     <simplelist columns="3">
      <member>Adabas D</member>
      <member>dBase</member>
      <member>Empress</member>
      <member>FilePro (read-only)</member>
      <member>Hyperwave</member>
      <member>IBM DB2</member>
      <member>Informix</member>
      <member>Ingres</member>
      <member>InterBase</member>
      <member>FrontBase</member>
      <member>mSQL</member>
      <member>Direct MS-SQL</member>
      <member>MySQL</member>
      <member>ODBC</member>
      <member>Oracle (OCI7 and OCI8)</member>
      <member>Ovrimos</member>
      <member>PostgreSQL</member>
      <member>SQLite</member>
      <member>Solid</member>
      <member>Sybase</member>
      <member>Velocis</member>
      <member>Unix dbm</member>
     </simplelist>
    </blockquote>
    Também foi providenciado uma abstração de banco de dados (chamada PDO) permitindo a você
    utilizar qualquer banco de dados transparentemente com sua extensão.
    Adicionalmente, o PHP suporta ODBC (Open Database Connection, ou Padrão Aberto de Conexão com Bancos de Dados),
    permitindo que você utilize qualquer outro banco de dados que suporte
    esse padrão mundial.
   </para>
   <para>
    O PHP também tem suporte para comunicação com outros serviços utilizando protocolos
    como LDAP, IMAP, SNMP, NNTP, POP3, HTTP, COM (em Windows) e
    incontáveis outros. Você pode abrir sockets de rede e
    interagir diretamente com qualquer protocolo. O PHP também suporta o
    intercâmbio de dados complexos WDDX, utilizado em virtualmente todas as linguagens
    de programação para web. Falando de comunicação, o PHP implementa a
    instanciação de objetos Java e os utiliza transparentemente como
    objetos PHP. Você ainda pode usar sua extensão CORBA para
    acessar objetos remotos.
   </para>
   <para>
    O PHP é extremamente útil em recursos de processamento de texto, do
    POSIX Estendido ou expressões regulares Perl até como interpretador para
    documentos XML. No processamento de XML, o PHP 4
    suporta os padrões SAX e DOM, além de você também poder utilizar
    a extensão XSL para transformar documentos XML. O PHP 5 padroniza
    toda a extensão XML a partir da base sólida da libxml2, além de estender
    os recursos com o acréscimo ao SimpleXML e XMLReader.
   </para>
   <para>
    Por último mas longe de terminar, temos também outras extensões
    interessantes: funções para o search engine mnoGoSearch,
    funções para Gateway IRC, vários utilitários de compressão
    (gzip, bz2, zip), calendário e conversões de datas, tradução...
   </para>
   <para>
    Como você pode ver, esta página não é suficiente para descrever todos
    os recursos e benefícios que o PHP pode oferecer. Leia nas
    seções sobre a <link linkend="install">Instalação do
    PHP</link>, e veja a <link linkend="funcref">referência das
    funções</link> para detalhes das extensões
    mencionadas aqui.
   </para>
  </section>

 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

