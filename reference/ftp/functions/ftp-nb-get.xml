<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: n/a Maintainer: fernandoc Status: ready -->
<refentry xml:id="function.ftp-nb-get" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>ftp_nb_get</refname>
  <refpurpose>Obtém um arquivo do servidor FTP e escreve-o em um arquivo local (sem bloquear)</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>ftp_nb_get</methodname>
   <methodparam><type>resource</type><parameter>ftp_stream</parameter></methodparam>
   <methodparam><type>string</type><parameter>local_file</parameter></methodparam>
   <methodparam><type>string</type><parameter>remote_file</parameter></methodparam>
   <methodparam><type>int</type><parameter>mode</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>resumepos</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>ftp_nb_get</function> obtém um arquivo remoto do servidor FTP e salva-o 
   em um arquivo local. 
  </para>
  <para>
   A diferença entre esta função é <function>ftp_get</function> é que
   esta função obtém o arquivo de forma assincronoma, assim o seu programa pode
   realizar outras operações enquanto o arquivo esta sendo baixado.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>ftp_stream</parameter></term>
     <listitem>
      <para>
       O identificador com a conexão FTP.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>local_file</parameter></term>
     <listitem>
      <para>
       O caminho para o arquivo local (será sobrescrito se o arquivo local já existir).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>remote_file</parameter></term>
     <listitem>
      <para>
       O caminho para o arquivo remoto.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>mode</parameter></term>
     <listitem>
      <para>
       O modo de transferência. Deve ser <constant>FTP_ASCII</constant> ou
       <constant>FTP_BINARY</constant>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>resumepos</parameter></term>
     <listitem>
      <para></para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna <constant>FTP_FAILED</constant> ou <constant>FTP_FINISHED</constant>
   ou <constant>FTP_MOREDATA</constant>.
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplo <function>ftp_nb_get</function></title>
    <programlisting role="php">
<![CDATA[
<?php

// Initate the download
$ret = ftp_nb_get($my_connection, "test", "README", FTP_BINARY);
while ($ret == FTP_MOREDATA) {
   
   // Do whatever you want
   echo ".";

   // Continue downloading...
   $ret = ftp_nb_continue($my_connection);
}
if ($ret != FTP_FINISHED) {
   echo "There was an error downloading the file...";
   exit(1);
}
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>Continuando um download com <function>ftp_nb_get</function></title>
    <programlisting role="php">
<![CDATA[
<?php

// Initate 
$ret = ftp_nb_get($my_connection, "test", "README", FTP_BINARY, 
                      filesize("test"));
// OR: $ret = ftp_nb_get($my_connection, "test", "README", 
//                           FTP_BINARY, FTP_AUTORESUME);
while ($ret == FTP_MOREDATA) {
   
   // Do whatever you want
   echo ".";

   // Continue downloading...
   $ret = ftp_nb_continue($my_connection);
}
if ($ret != FTP_FINISHED) {
   echo "There was an error downloading the file...";
   exit(1);
}
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>
     Continuando um download na posição 100 para um
     novo arquivo com <function>ftp_nb_get</function>
    </title>
    <programlisting role="php">
<![CDATA[
<?php

// Disable Autoseek
ftp_set_option($my_connection, FTP_AUTOSEEK, false);

// Initiate
$ret = ftp_nb_get($my_connection, "newfile", "README", FTP_BINARY, 100);
while ($ret == FTP_MOREDATA) {

   /* ... */
   
   // Continue downloading...
   $ret = ftp_nb_continue($my_connection);
}
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   No exemplo acima, <filename>newfile</filename> é 100 bytes menor
   do que <filename>README</filename> no servidor FTP porque nós começamos a
   ler a partir da posição 100. Se nós não disabilitarmos 
   <constant>FTP_AUTOSEEK</constant>, os primeiros 100 bytes de
   <filename>newfile</filename> serão <literal>'\0'</literal>.
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>ftp_nb_fget</function></member>
    <member><function>ftp_nb_continue</function></member>
    <member><function>ftp_fget</function></member>
    <member><function>ftp_get</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
