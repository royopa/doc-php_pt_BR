<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: n/a Maintainer: felipe Status: ready --><!-- CREDITS: fernandoc -->
<appendix xml:id="errorfunc.constants" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.constants;
 &extension.constants.core;
  <note>
   <simpara>
    Você pode usar estes nomes de constantes no &php.ini; mas não fora do
    PHP, como no &httpd.conf;, aonde você 
    deve usar os valores.
   </simpara>
  </note>
 <table xml:id="errorfunc.constants.errorlevels">
  <title>Erros e Logs</title>
  <tgroup cols="4">
   <thead>
    <row>
     <entry>Valor</entry>
     <entry>Constante</entry>
     <entry>Descrição</entry>
     <entry>Nota</entry>
    </row>
   </thead>
   <tbody>
    <row xml:id="errorfunc.constants.errorlevels.e-error">
     <entry>1</entry>
     <entry>
      <constant>E_ERROR</constant> 
      (<type>integer</type>)
     </entry>
     <entry>
      Erros fatais em tempo de execução. Estes indicam erros que não podem ser
      recuperados, como problemas de alocação de memória.
      A execução do script é interrompida.
     </entry>
     <entry></entry>
    </row>

    <row xml:id="errorfunc.constants.errorlevels.e-warning">
     <entry>2</entry>
     <entry>
      <constant>E_WARNING</constant> 
      (<type>integer</type>)
     </entry>
     <entry>
      Avisos em tempo de execução (erros não fatais). A execução do script
      não é interrompida.
     </entry>
     <entry></entry>
    </row>

    <row xml:id="errorfunc.constants.errorlevels.e-parse">
     <entry>4</entry>
     <entry>
      <constant>E_PARSE</constant> 
      (<type>integer</type>)
     </entry>
     <entry>
      Erro em tempo de compilação. Erros gerados pelo interpretador.
     </entry>
     <entry></entry>
    </row>

    <row xml:id="errorfunc.constants.errorlevels.e-notice">
     <entry>8</entry>
     <entry>
      <constant>E_NOTICE</constant> 
      (<type>integer</type>)
     </entry>
     <entry>
      Notícia em tempo de execução. Indica que o script encontrou alguma coisa que 
      pode indicar um erro, mas que também possa acontecer durante a execução 
      normal do script.
     </entry>
     <entry></entry>
    </row>

    <row xml:id="errorfunc.constants.errorlevels.e-core-error">
     <entry>16</entry>
     <entry>
      <constant>E_CORE_ERROR</constant> 
      (<type>integer</type>)
     </entry>
     <entry>
      Erro fatal que acontece durante a inicialização do PHP. Este é parecido com
      <constant>E_ERROR</constant>, exceto que é gerado pelo núcleo do PHP.
     </entry>
     <entry>desde o PHP 4</entry>
    </row>

    <row xml:id="errorfunc.constants.errorlevels.e-core-warning">
     <entry>32</entry>
     <entry>
      <constant>E_CORE_WARNING</constant> 
      (<type>integer</type>)
     </entry>
     <entry>
      Avisos (erros não fatais) que aconteçam durante a inicialização do PHP.
      Este é parecido com <constant>E_WARNING</constant>, exceto que é gerado pelo 
      núcleo do PHP.
     </entry>
     <entry>desde o PHP 4</entry>
    </row>

    <row xml:id="errorfunc.constants.errorlevels.e-compile-error">
     <entry>64</entry>
     <entry>
      <constant>E_COMPILE_ERROR</constant> 
      (<type>integer</type>)
     </entry>
     <entry>
      Erro fatal em tempo de compilação. Este é parecido com <constant>E_ERROR</constant>,
      exceto que é gerado pelo Zend Scripting Engine.
     </entry>
     <entry>desde o PHP 4</entry>
    </row>

    <row xml:id="errorfunc.constants.errorlevels.e-compile-warning">
     <entry>128</entry>
     <entry>
      <constant>E_COMPILE_WARNING</constant> 
      (<type>integer</type>)
     </entry>
     <entry>
      Aviso em tempo de compilação. Este é parecido com
      <constant>E_WARNING</constant>, exceto que é geredo pelo Zend
      Scripting Engine.
     </entry>
     <entry>desde o PHP 4</entry>
    </row>

    <row xml:id="errorfunc.constants.errorlevels.e-user-error">
     <entry>256</entry>
     <entry>
      <constant>E_USER_ERROR</constant> 
      (<type>integer</type>)
     </entry>
     <entry>
      Erro gerado pelo usuário. Este é parecido com
      <constant>E_ERROR</constant>, exceto que é gerado pelo código PHP
      usando a função <function>trigger_error</function>.
     </entry>
     <entry>desde o PHP 4</entry>
    </row>

    <row xml:id="errorfunc.constants.errorlevels.e-user-warning">
     <entry>512</entry>
     <entry>
      <constant>E_USER_WARNING</constant> 
      (<type>integer</type>)
     </entry>
     <entry>
      Aviso gerado pelo usuário. Este é parecido com
      <constant>E_WARNING</constant>, exceto que é gerado pelo código PHP
      usando a função <function>trigger_error</function>.
     </entry>
     <entry>desde o PHP 4</entry>
    </row>

    <row xml:id="errorfunc.constants.errorlevels.e-user-notice">
     <entry>1024</entry>
     <entry>
      <constant>E_USER_NOTICE</constant> 
      (<type>integer</type>)
     </entry>
     <entry>
      Notícia gerada pelo usuário. Este é parecido com
      <constant>E_NOTICE</constant>, exceto que é gerado pelo código PHP
      usando a função  <function>trigger_error</function>.
     </entry>
     <entry>desde o PHP 4</entry>
    </row>

    <row xml:id="errorfunc.constants.errorlevels.e-strict">
     <entry>2048</entry>
     <entry>
      <constant>E_STRICT</constant> 
      (<type>integer</type>)
     </entry>
     <entry>
      Notícias em tempo de execução. Permite ao PHP sugerir mudanças
      ao seu código as quais irão assegurar melhor interoperabilidade
      e compatibilidade futura do seu código.
     </entry>
     <entry>desde o PHP 5</entry>
    </row>

    <row xml:id="errorfunc.constants.errorlevels.e-recoverable-error">
     <entry>4096</entry>
     <entry>
      <constant>E_RECOVERABLE_ERROR</constant> 
      (<type>integer</type>)
     </entry>
     <entry>
      Erro fatal capturável. Indica que um erro provavelmente perigoso
      aconteceu, mas não deixou o Engine em um estado instável. Se o erro não
      for pego por uma manipulador definido pelo usuário (veja também
      <function>set_error_handler</function>), a aplicação é abortada como se
      fosse um <constant>E_ERROR</constant>.
     </entry>
     <entry>desde o PHP 5.2.0</entry>
    </row>

    <row xml:id="errorfunc.constants.errorlevels.e-deprecated-error">
     <entry>8192</entry>
     <entry>
      <constant>E_DEPRECATED</constant> 
      (<type>integer</type>)
     </entry>
     <entry>
      Avisos em tempo de execução. Habilite-o para receber avisos sobre código
      que não funcionará em futuras versões.
     </entry>
     <entry>desde o PHP 5.3.0</entry>
    </row>

    <row xml:id="errorfunc.constants.errorlevels.e-user-deprecated">
     <entry>16384</entry>
     <entry>
      <constant>E_USER_DEPRECATED</constant> 
      (<type>integer</type>)
     </entry>
     <entry>
      Mensagem de aviso gerado pelo usuário. Este é como um
      <constant>E_DEPRECATED</constant>, exceto que é gerado em código PHP usando
      a função <function>trigger_error</function>.
     </entry>
     <entry>desde o PHP 5.3.0</entry>
    </row>

    <row xml:id="errorfunc.constants.errorlevels.e-all">
     <entry>30719</entry>
     <entry>
      <constant>E_ALL</constant> 
      (<type>integer</type>)
     </entry>
     <entry>
      Todos erros e avisos, como suportado, exceto de nível
      <constant>E_STRICT</constant> no PHP &lt; 6.
     </entry>
     <entry>
      32767 no PHP 6,
      30719 no PHP 5.3.x,
      6143 no PHP 5.2.x,
      2047 anteriormente
     </entry>
    </row>

   </tbody>
  </tgroup>
 </table>

 <para>
  Os valores acima (numéricos ou simbolicos) são usados para
  criar um bitmask que especifica quais erros reportar.Você pode usar os
  <link linkend="language.operators.bitwise">operadores Bit-a-bit</link>
  para combinar estes valores ou mascarar certos tipos de erro.
  Note que somente '|', '~', '!', '^' and '&amp;' serão ententidos dentro do
  &php.ini;.
 </para>
</appendix> 

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
