<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: n/a Maintainer: fernandoc Status: ready -->
  <refentry xml:id="function.error-reporting" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>error_reporting</refname>
    <refpurpose>Define quais erros serão reportados</refpurpose>
   </refnamediv>

  <refsect1 role="description">
     &reftitle.description;
     <methodsynopsis>
      <type>int</type><methodname>error_reporting</methodname>
      <methodparam choice="opt"><type>int</type><parameter>nível</parameter></methodparam>
     </methodsynopsis>
    <para>
     A função <function>error_reporting</function> define a diretiva
     <link linkend="ini.error-reporting">error_reporting</link>
     em tempo de execução. O PHP tem vários níveis de erros, usando esta função
     você pode definir o nível durante a execução do seu script.
    </para>
   </refsect1>

   <refsect1 role="parameters">
    &reftitle.parameters;
    <para>
     <variablelist>
     <varlistentry>
     <term><parameter>level</parameter></term>
     <listitem>
    <para>
     O novo nível <link linkend="ini.error-reporting">error_reporting</link>.
     Ele leva ou um bitmask, ou uma constante. Usar constantes
     é fortemente encorajado para assegurar compatibilidade com versões
     futuras. Quando níveis de erros forem adicionados, o intervalo dos inteiros aumenta,
     assim antigos níveis de erro baseados em inteiros não irão funcionar como esperado.
    </para>
    <para>
     Os níveis de erro disponíveis estão listados a baixo.
     A descrição deles esta em
     <link linkend="errorfunc.constants">constantes pré-definidas</link>.
     <table>
      <title>Constantes de nível e valores de bit de <function>error_reporting</function>.</title>
      <tgroup cols="2">
       <thead>
        <row>
         <entry>Valor</entry>
         <entry>Constante</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry>1</entry>
         <entry>
          <link linkend="errorfunc.constants.errorlevels.e-error">E_ERROR</link>
         </entry>
        </row>
        <row>
         <entry>2</entry>
         <entry>
          <link linkend="errorfunc.constants.errorlevels.e-warning">E_WARNING</link>
         </entry>
        </row>
        <row>
         <entry>4</entry>
         <entry>
          <link linkend="errorfunc.constants.errorlevels.e-parse">E_PARSE</link>
         </entry>
        </row>
        <row>
         <entry>8</entry>
         <entry>
          <link linkend="errorfunc.constants.errorlevels.e-notice">E_NOTICE</link>
         </entry>
        </row>
        <row>
         <entry>16</entry>
         <entry>
          <link linkend="errorfunc.constants.errorlevels.e-core-error">E_CORE_ERROR</link>
         </entry>
        </row>
        <row>
         <entry>32</entry>
         <entry>
          <link linkend="errorfunc.constants.errorlevels.e-core-warning">E_CORE_WARNING</link>
         </entry>
        </row>
        <row>
         <entry>64</entry>
         <entry>
          <link linkend="errorfunc.constants.errorlevels.e-compile-error">E_COMPILE_ERROR</link>
         </entry>
        </row>
        <row>
         <entry>128</entry>
         <entry>
          <link linkend="errorfunc.constants.errorlevels.e-compile-warning">E_COMPILE_WARNING</link>
         </entry>
        </row>
        <row>
         <entry>256</entry>
         <entry>
          <link linkend="errorfunc.constants.errorlevels.e-user-error">E_USER_ERROR</link>
         </entry>
        </row>
        <row>
         <entry>512</entry>
         <entry>
          <link linkend="errorfunc.constants.errorlevels.e-user-warning">E_USER_WARNING</link>
         </entry>
        </row>
        <row>
         <entry>1024</entry>
         <entry>
          <link linkend="errorfunc.constants.errorlevels.e-user-error">E_USER_NOTICE</link>
         </entry>
        </row>
        <row>
         <entry>6143</entry>
         <entry>
          <link linkend="errorfunc.constants.errorlevels.e-all">E_ALL</link>
         </entry>
        </row>
        <row>
         <entry>2048</entry>
         <entry>
          <link linkend="errorfunc.constants.errorlevels.e-strict">E_STRICT</link>
         </entry>
        </row>
        <row>
         <entry>4096</entry>
         <entry>
          <link linkend="errorfunc.constants.errorlevels.e-recoverable-error">E_RECOVERABLE_ERROR</link>
         </entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>
    </listitem>
    </varlistentry>
  </variablelist>
    </para>
    </refsect1>

    <refsect1 role="returnvalues">
     &reftitle.returnvalues;
     <para>
      Retorna o nível anterior de
      <link linkend="ini.error-reporting">error_reporting</link>.
     </para>
    </refsect1>

    <refsect1 role="changelog">
     &reftitle.changelog;
     <para>
      <informaltable>
       <tgroup cols="2">
        <thead>
         <row>
          <entry>&Version;</entry>
          <entry>&Description;</entry>
         </row>
        </thead>
        <tbody>
         <row>
          <entry>5.0.0</entry>
          <entry><constant>E_STRICT</constant> introduzido (não parte de  <constant>E_ALL</constant>).</entry>
         </row>
         <row>
          <entry>5.2.0</entry>
          <entry><constant>E_RECOVERABLE_ERROR</constant> introduzido.</entry>
         </row>
         <row>
          <entry>6</entry>
          <entry><constant>E_STRICT</constant> tornou-se parte de <constant>E_ALL</constant>.</entry>
         </row>
        </tbody>
       </tgroup>
      </informaltable>
     </para>
    </refsect1>

    <refsect1 role="examples">
     &reftitle.examples;
     <para>
      <example>
       <title>Exemplos <function>error_reporting</function></title>
        <programlisting role="php">
<![CDATA[
<?php

// Turn off all error reporting
error_reporting(0);

// Report simple running errors
error_reporting(E_ERROR | E_WARNING | E_PARSE);

// Reporting E_NOTICE can be good too (to report uninitialized
// variables or catch variable name misspellings ...)
error_reporting(E_ERROR | E_WARNING | E_PARSE | E_NOTICE);

// Report all errors except E_NOTICE
// This is the default value set in php.ini
error_reporting(E_ALL ^ E_NOTICE);

// Report all PHP errors
error_reporting(E_ALL);

// Same as error_reporting(E_ALL);
ini_set('error_reporting', E_ALL);

?>
]]>
      </programlisting>
     </example>
    </para>
   </refsect1>

  <refsect1 role="notes">
   &reftitle.notes;
    <warning>
     <simpara>
      A maioria dos erros <constant>E_STRICT</constant> são avaliados em
      tempo de compilação assim esses erros não são reportados no arquivo aonde
      <link linkend="ini.error-reporting">error_reporting</link> é aumentado
      para incluir erros <constant>E_STRICT</constant> (e vice versa).
     </simpara>
    </warning>
    <para>
     <simplelist>
      <member>A diretiva <link linkend="ini.display-errors">display_errors</link></member>
      <member><function>ini_set</function></member>
     </simplelist>
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
