<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: n/a Maintainer: diogo Status: ready --><!-- CREDITS: rarruda,ae -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.fwrite">
 <refnamediv>
  <refname>fwrite</refname>
  <refpurpose>Escrita binary-safe em arquivos</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>fwrite</methodname>
   <methodparam><type>resource</type><parameter>handle</parameter></methodparam>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>length</parameter></methodparam>
  </methodsynopsis>
  <simpara>
   <function>fwrite</function> escreve o conteúdo da 
   <parameter>string</parameter> para o stream de arquivo apontado por
   <parameter>handle</parameter>. 
  </simpara>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>handle</parameter></term>
     <listitem>
      &fs.file.pointer;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       A string a ser escrita.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>length</parameter></term>
     <listitem>
      <para>
       Se o argumento <parameter>comprimento</parameter> for dado, a escrita irá
       parar depois que <parameter>comprimento</parameter> bytes tenham sido escritos ou
       o final da <parameter>string</parameter> seja alcançado, o que vier
       primeiro.
      </para>
      <para>
       Observe que se o argumento <parameter>comprimento</parameter> for dado,
       a opção de configuração <link
       linkend="ini.magic-quotes-runtime">magic_quotes_runtime</link>
       será ignorada e nenhuma barra será removida da <parameter>string</parameter>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <simpara>
   <function>fwrite</function> retorna o número de bytes
   escritos, ou &false; em caso de erro.
  </simpara>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Em sistemas que diferenciam entre arquivos binários e texto
    (por exemplo Windows) o arquivo tem que ser aberto com 'b'
    incluído no parâmetro 'mode' na <function>fopen</function>.
   </para>
  </note>
  <note>
   <para>
    Se o <parameter>handle</parameter> foi aberto com <function>fopen</function>
    em modo de adição, escritas com <function>fwrite</function> são atômicas
    (a não ser que o tamanho da <parameter>string</parameter> exceda o tamanho
    de bloco do sistema de arquivos, em algumas plataformas, e contanto que o
    arquivo esteja em um sistema de arquivos local). Sendo assim,
    não há necessidade de bloquear um recurso com <function>flock</function> antes
    de chamar <function>fwrite</function>; todos os dados serão escritos sem
    interrupção.
   </para>
  </note>
  <note>
   <para>
    Se escrevendo duas vezes para o ponteiro do arquivo, então a informação
    será adicionado ao final do contéudo do arquivo, significando que o exemplo 
    abaixo não funcionaria como esperado:
    <programlisting role="php">
<![CDATA[
<?php
$fp = fopen('data.txt', 'w');
fwrite($fp, '1');
fwrite($fp, '23');
fclose($fp);

// o conteúdo de 'data.txt' agora é 123 e não 23!
?>
]]>
    </programlisting>
   </para>
  </note>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Um simples exemplo de <function>fwrite</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$filename = 'teste.txt';
$conteudo = "Acrescentar isso ao arquivo\n";

// Primeiro vamos ter certeza de que o arquivo existe e pode ser alterado
if (is_writable($filename)) {

 // Em nosso exemplo, nós vamos abrir o arquivo $filename
 // em modo de adição. O ponteiro do arquivo estará no final
 // do arquivo, e é pra lá que $conteudo irá quando o 
 // escrevermos com fwrite().
    if (!$handle = fopen($filename, 'a')) {
         echo "Não foi possível abrir o arquivo ($filename)";
         exit;
    }

    // Escreve $conteudo no nosso arquivo aberto.
    if (fwrite($handle, $conteudo) === FALSE) {
        echo "Não foi possível escrever no arquivo ($filename)";
        exit;
    }

    echo "Sucesso: Escrito ($conteudo) no arquivo ($filename)";

    fclose($handle);

} else {
    echo "O arquivo $filename não pode ser alterado";
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>fread</function></member>
    <member><function>fopen</function></member>
    <member><function>fsockopen</function></member>
    <member><function>popen</function></member>
    <member><function>file_get_contents</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
