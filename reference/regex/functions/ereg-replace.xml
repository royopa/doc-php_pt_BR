<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: n/a Maintainer: felipe Status: ready --><!-- CREDITS: kappu -->
<refentry xml:id="function.ereg-replace" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>ereg_replace</refname>
  <refpurpose>Substituição através de expressões regulares</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>ereg_replace</methodname>
   <methodparam><type>string</type><parameter>pattern</parameter></methodparam>
   <methodparam><type>string</type><parameter>replacement</parameter></methodparam>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
  </methodsynopsis>
  <simpara>
   Essa função busca em <parameter>string</parameter> resultados para a
   <parameter>pattern</parameter>, substituindo se casar pelo texto
   <parameter>replacement</parameter>.
  </simpara>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>pattern</parameter></term>
     <listitem>
      <para>
       A extendida expressão regular POSIX.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>replacement</parameter></term>
     <listitem>
      <para>
       Se o <parameter>pattern</parameter> contém parênteses de substrings, 
       a <parameter>replacement</parameter> será realizada através do formato 
       <literal>\\<replaceable>digit</replaceable></literal>, que indicará qual 
       parte do texto substituido deverá ser retornado; 
       <literal>\\0</literal> retornará a string toda. Até nove substrings podem 
       ser usadas. Os parênteses podem ser aninhados, sendo que a contagem
       será feita através da quantidade de parênteses abertos.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       A string de entrada.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   A string modificada é retornada. Se nenhuma substituição é feita na
   <parameter>string</parameter>, então retornará a string inalterada.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   Por exemplo, o pedaço de código seguinte imprimirá "Esse foi um teste"
   três vezes:
  </para>
  <para>
   <example>
    <title>Exemplo da <function>ereg_replace</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$string = "Esse e um teste";
echo str_replace(" e", " foi", $string);
echo ereg_replace("( )e", "\\1foi", $string);
echo ereg_replace("(( )e)", "\\2foi", $string);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   Preste atenção se usar uma variável integer no parâmetro
   <parameter>substituicao</parameter>, pois o resultado pode
   não ser exatamente o esperado. Isso acontece porque a função
   <function>ereg_replace</function> interpreta o valor
   ordinal do número. Por exemplo:
  </para>
  <para>
   <example>
    <title>Exemplo da <function>ereg_replace</function></title>
    <programlisting role="php">
<![CDATA[
<?php
/* Esse exemplo não funcionará. */
$num = 5;
$string = "Essa frase tem cinco palavras.";
$string = ereg_replace('cinco', $num, $string);
echo $string;   /* Resultado: 'Essa frase tem   palavras.' */

/* Esse exemplo funcionará. */
$num = '5';
$string = "Essa frase tem cinco palavras.";
$string = ereg_replace('cinco', $num, $string);
echo $string;   /* Resultado: 'Essa frase tem 5 palavras.' */
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <example>
      <title>Substitui URLs por links</title>
      <programlisting role="php">
<![CDATA[
<?php
$text = ereg_replace("[[:alpha:]]+://[^<>[:space:]]+[[:alnum:]/]",
                     "<a href=\"\\0\">\\0</a>", $text);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <tip>
   <para>
    <function>preg_replace</function>, você pode também utilizar as expressões regulares
    compátiveis com perl, frequentemente uma alternativar veloz a função
    <function>ereg_replace</function>.
   </para>
  </tip>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>ereg</function></member>
    <member><function>eregi</function></member>
    <member><function>eregi_replace</function></member>
    <member><function>str_replace</function></member>
    <member><function>preg_match</function></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
