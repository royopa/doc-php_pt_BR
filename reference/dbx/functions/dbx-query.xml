<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: n/a Maintainer: felipe Status: ready --><!-- CREDITS: thomasgm -->
  <refentry xml:id="function.dbx-query" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>dbx_query</refname>
    <refpurpose>Envia uma requisição e armazena todos os resultados (se houver)</refpurpose>
   </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
     <methodsynopsis>
      <type>mixed</type><methodname>dbx_query</methodname>
      <methodparam><type>object</type><parameter>link_identifier</parameter></methodparam>
      <methodparam><type>string</type><parameter>sql_statement</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>flags</parameter></methodparam>
     </methodsynopsis>
  <para>
   Envia uma query e obtém todos resultados.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>link_identifier</parameter></term>
     <listitem>
      <para>
       O link do objeto DBX retornado pela <function>dbx_connect</function>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>sql_statement</parameter></term>
     <listitem>
      <para>
       O comando SQL.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       O parâmetro <parameter>flags</parameter> é usado para controlar a quantiodade 
       de informação que é retornada. Estas informações podem ser qualquer combinação 
       de uma das constantes abaixo usando o operador bitwise OR (|). As flags DBX_COLNAMES_* 
       quando usadas, substituem as dbx.colnames_case configuradas no &php.ini;.
     <variablelist>
      <varlistentry>
       <term>
        <constant>DBX_RESULT_INDEX</constant>
       </term>
       <listitem>
        <simpara>
         Está <emphasis>sempre</emphasis> ligada, isto é, o objeto retornado 
         contém uma propriedade <property>data</property>, que é um array numérico 
         indexado com 2 dimensões. Por exemplo, na expressão <literal>data[2][3]</literal> 
         <literal>2</literal> é o número da coluna (ou registro) e <literal>3</literal> é o 
         número da coluna (ou campo). A primeira linha e coluna estão no índice 0.
        </simpara>
        <simpara>
         Se a constante <constant>DBX_RESULT_ASSOC</constant> estiver sendo especificada, 
         o objeto retornado irá conter informações relacionadas à <constant>DBX_RESULT_INFO</constant> 
         também, mesmo que isto não tenha sido especificado.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>
        <constant>DBX_RESULT_INFO</constant>
       </term>
       <listitem>
        <simpara>
         Contém informações sobre colunas, assim como o nome e tipos dos campos.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>
        <constant>DBX_RESULT_ASSOC</constant>
       </term>
       <listitem>
        <simpara>
         Esta constante torna possível o acesso aos valores dos campos e nomes das colunas 
         respectivamente, ela é usada como chave para os objetos retornados na propriedade 
         <property>data</property>.
        </simpara>
        <simpara>
          Os resultados associados são atualmente referências aos dados numericamente 
         posicionados, sendo assim, ao modificar <literal>data[0][0]</literal> causa 
         a modificação de <literal>data[0]['nome_para_a_primeira_coluna']</literal> 
         também.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>
        <constant>DBX_RESULT_UNBUFFERED</constant> (PHP 5)
       </term>
       <listitem>
        <simpara>
         Esta flag não irá criar a propriedade <property>data</property>, e 
         a propriedade <property>rows</property> irá iniciar à partir do 0. Use esta 
         flag para grandes datasets, e use a função <function>dbx_fetch_row</function> 
         para obter os resultados linha à linha.
        </simpara>
        <simpara>
         A função <function>dbx_fetch_row</function> irá retornar as linhas que 
         fazem parte das flags desta requisição. Incidentalmente, ela irá também 
         atualizar a propriedade <property>rows</property> toda vez que for chamada.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>
        <constant>DBX_COLNAMES_UNCHANGED</constant> (disponível à partir do PHP 4.3.0)
       </term>
       <listitem>
        <simpara>
         Os nomes das colunas retornadas não serão alterados.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>
        <constant>DBX_COLNAMES_UPPERCASE</constant> (disponível à partir do PHP 4.3.0)
       </term>
       <listitem>
        <simpara>
         Os nomes das colunas retornadas serão todas alteradas para CAIXA ALTA.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>
        <constant>DBX_COLNAMES_LOWERCASE</constant> (disponível à partir do PHP 4.3.0)
       </term>
       <listitem>
        <simpara>
         Os nomes das colunas retornadas serão todas alteradas para caixa baixa.
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
     Note que a constante <constant>DBX_RESULT_INDEX</constant> é sempre usada, 
     contendo o valor atual do parâmetro <parameter>flags</parameter>. Isto significa 
     que somennte as seguintes combinaçõs surtem efeito:
     <itemizedlist>
      <listitem>
       <simpara>
        <constant>DBX_RESULT_INDEX</constant>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <constant>DBX_RESULT_INDEX</constant> |
        <constant>DBX_RESULT_INFO</constant>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <constant>DBX_RESULT_INDEX</constant> |
        <constant>DBX_RESULT_INFO</constant> |
        <constant>DBX_RESULT_ASSOC</constant> - este é o padrão, se o parâmetro 
        <parameter>flags</parameter> não for especificado.
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <function>dbx_query</function> retorna um objeto ou <literal>1</literal> 
   em sucesso, e <literal>0</literal> em falha. O objeto é retornado
   somente se a query dada em <parameter>sql_statement</parameter>
   produz um conjunto de resultados (i.e. uma query SELECT, até mesmo se 
   o conjunto de resultado é vazio).
  </para>
    <para>
     O <varname>objeto</varname> retornado contém quatro ou cinco 
     propriedades dependendo do parâmetro <parameter>flags</parameter>:
     <variablelist>
      <varlistentry>
       <term>
        <property>handle</property>
       </term>
       <listitem>
        <para>
         É um evento válido para a conexão com o banco de dados, e como tal pode ser 
         usado nas funções do módulo específico (se necessário).
         <informalexample>
          <programlisting role="php">
<![CDATA[
<?php
$result = dbx_query ($link, "SELECT id FROM tabela");
mysql_field_len ($result->handle, 0);
?>
]]>
          </programlisting>
         </informalexample>
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>
        <property>cols</property> e <property>rows</property>
       </term>
       <listitem>
        <para>
         Estas propriedades conte´m o número das colunas (ou campos) e das linhas (ou registros) 
         respectivamente.
         <informalexample>
          <programlisting role="php">
<![CDATA[
<?php
$result = dbx_query ($link, 'SELECT id FROM tabela');
echo $result->rows; // número de registros
echo $result->cols; // número de campos
?>
]]>
          </programlisting>
         </informalexample>
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>
        <property>info</property> (opcional)
       </term>
       <listitem>
        <simpara>
         É retornado somente se as constantes <constant>DBX_RESULT_INFO</constant> ou 
         <constant>DBX_RESULT_ASSOC</constant> são especificados no parâmetro <parameter>flags</parameter>. 
         Esta propriedade é um array de 2 dimensões, que contém duas linhas nomeadas (<literal>name</literal> 
         e <literal>type</literal>) para obter informação da coluna.
        </simpara>
        <example>
         <title>lista cada nome e tipo de campo</title>
         <programlisting role="php">
<![CDATA[
<?php
$result = dbx_query ($link, 'SELECT id FROM tabela',
                     DBX_RESULT_INDEX | DBX_RESULT_INFO);

for ($i = 0; $i < $result->cols; $i++ ) {
    echo $result->info['name'][$i] . "\n";
    echo $result->info['type'][$i] . "\n";  
}
?>
]]>
         </programlisting>
        </example>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>
        <property>data</property>
       </term>
       <listitem>
        <simpara>
         Esta propriedade contém os dados do resultado atual, possivelmente associado 
         com os nomes das colunas depdnendo do parâmetro <parameter>flags</parameter>. 
         Se a constante <constant>DBX_RESULT_ASSOC</constant> está ligada, é possível 
         usar <literal>$result->data[2]["nome_do_campo"]</literal>.
        </simpara>
        <example>
         <title>colocando o conteúdo da propriedade data em uma tabela HTML</title>
         <programlisting role="php">
<![CDATA[
<?php
$resultado = dbx_query ($link, 'SELECT id, parentid, descricao FROM tabela');

echo "<table>\n";
foreach ( $resultado->data as $linha ) {
    echo "<tr>\n";
    foreach ( $linha as $campo ) {
        echo "<td>$campo</td>";
    }
    echo "</tr>\n";
}
echo "</table>\n";
?>
]]>
         </programlisting>
        </example>
        <example>
         <title>Como tratar requisições "UNBUFFERED"</title>
         <programlisting role="php">
<![CDATA[
<?php

$resultado = dbx_query ($link, 'SELECT id, parentid, descricao FROM tabela', DBX_RESULT_UNBUFFERED);

echo "<table>\n";
while ( $linha = dbx_fetch_row($resultado) ) {
    echo "<tr>\n";
    foreach ( $linha as $campo ) {
        echo "<td>$campo</td>";
    }
    echo "</tr>\n";
}
echo "</table>\n";

?>
]]>
         </programlisting>
        </example>
      </listitem>
      </varlistentry>
     </variablelist>
    </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Como manipular o valor retornado</title>
    <programlisting role="php">
<![CDATA[
<?php
$link   = dbx_connect(DBX_ODBC, "", "db", "username", "password")
    or die("Could not connect");

$result = dbx_query($link, 'SELECT id, parentid, description FROM table');

if (is_object($result) ) {
    // ... do some stuff here, see detailed examples below ...
    // first, print out field names and types 
    // then, draw a table filled with the returned field values
} else {
    exit("Query failed");
}

dbx_close($link);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 <refsect1 role="notes">
  &reftitle.notes;
    <note>
     <para>
      Sempre refira-se à documentação do módulo-específico quando necessário.
     </para>
     <para>
      Os nomes das colunas em uma requisição de um banco de dados Oracle 
      são retornados em maiúsculo.
     </para>
    </note>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
    <para>
     <simplelist>
      <member><function>dbx_escape_string</function></member>
      <member><function>dbx_fetch_row</function></member>
      <member><function>dbx_connect</function></member>
     </simplelist>
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
