<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: 297028 Maintainer: felipe Status: ready --><!-- CREDITS: thomasgm -->
  <refentry xml:id="function.dbx-sort" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>dbx_sort</refname>
    <refpurpose>
     Ordena um resultado de uma dbx_query usando uma função
    </refpurpose>
   </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
     <methodsynopsis>
      <type>bool</type><methodname>dbx_sort</methodname>
      <methodparam><type>object</type><parameter>result</parameter></methodparam>
      <methodparam><type>string</type><parameter>user_compare_function</parameter></methodparam>
     </methodsynopsis>
    <para>
   Ordena um resultado de um <function>dbx_query</function> chamando uma função
   para ordenação.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>result</parameter></term>
     <listitem>
      <para>
       Um conjunto de resultados retornado por <function>dbx_query</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>user_compare_function</parameter></term>
     <listitem>
      <para>
       A função do usuário definida para comparação. Ela precisa aceitar dois 
       argumentos e retornar um inteiro menor que, igual a, ou maior que zero
       se o primeiro argumento é considerado respectivamente menor que, igual a,
       ou maior que o segundo.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
     &return.success;
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
    <example>
     <title>Exemplo da <function>dbx_sort</function></title>
     <programlisting role="php">
<![CDATA[
<?php
function reordenar_usuario ($a, $b)
{
    $rv = dbx_compare ($a, $b, "parentid", DBX_CMP_DESC);
    if ( !$rv ) {
        $rv = dbx_compare ($a, $b, "id", DBX_CMP_NUMBER);
    }
    return $rv;
}

$link   = dbx_connect (DBX_ODBC, "", "bd", "nome de usuário", "senha")
    or die ("Não foi possível conectar");

$resultado = dbx_query ($link, "SELECT id, parentid, descricao FROM tabela ORDER BY id");
    // dados em $resultado estão ordenados pelo id

dbx_sort ($resultado, "reordenar_usuario");
    // dados em $resultado agora estão ordenados pelo parentid (ordem decrescente), e depois pelo id

dbx_close ($link);
?>
]]>
     </programlisting>
    </example>
  </para>
 </refsect1>
 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    É sempre melhor usar a cláusula <literal>ORDER BY</literal> da
    <literal>SQL</literal> ao invés de <function>dbx_sort</function>,
    se possível.
   </para>
  </note>
 </refsect1>
 <refsect1 role="seealso">
    &reftitle.seealso;
    <para>
     <simplelist>
      <member><function>dbx_compare</function></member>
     </simplelist>
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
