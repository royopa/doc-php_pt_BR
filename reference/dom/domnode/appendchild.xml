<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 331431 $ -->
<!-- EN-Revision: 330442 Maintainer: malukenho Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id='domnode.appendchild' xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>DOMNode::appendChild</refname>
  <refpurpose>
   Adiciona um novo nó filho ao final dos filhos
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>DOMNode</type><methodname>DOMNode::appendChild</methodname>
   <methodparam><type>DOMNode</type><parameter>newnode</parameter></methodparam>
  </methodsynopsis>
  <para>
  Esta função acrescenta um filho a uma lista existente de filhos, ou cria
uma nova lista de filhos. O filho pode ser criado, por exemplo, com a e.g.
   <methodname>DOMDocument::createElement</methodname>,
   <methodname>DOMDocument::createTextNode</methodname> etc. ou simplismente pode usar outro nó.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>newnode</parameter></term>
     <listitem>
      <para>
       Nó anexado.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
    O nó adicionado.
  </para>
 </refsect1>
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   <variablelist>
    <varlistentry>
     <term><constant>DOM_NO_MODIFICATION_ALLOWED_ERR</constant></term>
     <listitem>
      <para>
       Lençado se este nó é somente leitura, ou se o pai anterior do nó
        que está sendo inserido é somente leitura.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><constant>DOM_HIERARCHY_REQUEST_ERR</constant></term>
     <listitem>
      <para>
       Lançada se este nó é de um tipo que não permite que filhos do
       tipo <parameter>newnode</parameter>, ou se o nó para acrescentar 
       é um dos antepassados ​​deste nó, ou é este nó em si.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><constant>DOM_WRONG_DOCUMENT_ERR</constant></term>
     <listitem>
      <para>
       Lançado se <parameter>newnode</parameter> foi criado por um documento diferente
       do documento que criou esse nó.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   O exemplo a seguir irá adicionar um novo nó de elemento de um documento novo.
   <example>
    <title>Adicionando um nó filho</title>
    <programlisting role="php">
<![CDATA[
<?php

$doc = new DOMDocument;

$node = $doc->createElement("para");
$newnode = $doc->appendChild($node);

echo $doc->saveXML();
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>DOMNode::insertBefore</methodname></member>
    <member><methodname>DOMNode::removeChild</methodname></member>
    <member><methodname>DOMNode::replaceChild</methodname></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
