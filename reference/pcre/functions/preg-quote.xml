<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: n/a Maintainer: felipe Status: ready -->
<refentry xml:id="function.preg-quote" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>preg_quote</refname>
  <refpurpose>Adiciona escape em caracteres da expressão regular</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>preg_quote</methodname>
   <methodparam><type>string</type><parameter>str</parameter></methodparam>
  <methodparam choice="opt"><type>string</type><parameter>delimiter</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>preg_quote</function> pega <parameter>str</parameter>
   e coloca uma barra invertida antes de cada caractere que é parte da
   sintaxe da expressão regular. Isto é útil se você tem uma
   string em run-time que você precisa combinar em algum texto e a 
   string pode conter caracteres especiais de regex.
  </para>
  <para>
   Os caracteres especiais da expressão regular são
   <literal>. \ + * ? [ ^ ] $ ( ) { } = ! &lt; &gt; | :</literal>
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>str</parameter></term>
     <listitem>
      <para>
       A string de entrada.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>delimiter</parameter></term>
     <listitem>
      <para>
       Se o opcional <parameter>delimiter</parameter> é especificado, ele
       também terá escape antecedendo. Isto é útil para adicionar escape em delimitadores
       que é requerido pelas funções PCRE. A / é o delimitador mais comumente
       usado.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna a string modificada.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplo da <function>preg_quote</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$keywords = '$40 for a g3/400';
$keywords = preg_quote($keywords, '/');
echo $keywords; // returns \$40 for a g3\/400
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Deixando em itálico uma palavra de um texto</title>
    <programlisting role="php">
<![CDATA[
<?php
// In this example, preg_quote($word) is used to keep the
// asterisks from having special meaning to the regular
// expression.

$textbody = "This book is *very* difficult to find.";
$word = "*very*";
$textbody = preg_replace ("/" . preg_quote($word) . "/",
                          "<i>" . $word . "</i>",
                          $textbody);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.bin-safe;
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
