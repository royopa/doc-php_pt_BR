<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: 321326 Maintainer: thiago Status: ready -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.fsockopen">
 <refnamediv>
  <refname>fsockopen</refname>
  <refpurpose>Abre um socket de conexão Internet ou de domínio Unix</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>resource</type><methodname>fsockopen</methodname>
   <methodparam><type>string</type><parameter>hostname</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>port</parameter><initializer>-1</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter role="reference">errno</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter role="reference">errstr</parameter></methodparam>
   <methodparam choice="opt"><type>float</type><parameter>timeout</parameter><initializer>ini_get("default_socket_timeout")</initializer></methodparam>
  </methodsynopsis>
  <para>
   Inicia uma conexão socket para o recurso especificado em
   <parameter>hostname</parameter>.
  </para>
  <para>
   O PHP suporta alvos na Internet ou domínios Unix, conforme descrito em
   <xref linkend="transports"/>. Uma lista dos transportes suportados pode
   ser encontrada utilizando a função <function>stream_get_transports</function>.
  </para>
  <para>
   Por padrão o socket será aberto em modo de bloqueio. Você pode mudar para o
   modo desbloqueado utilizando a função 
   <function>stream_set_blocking</function>.
  </para>
  <para>
   A função <function>stream_socket_client</function> é similar mas provê um
   número maior de opções, incluindo conxão não bloqueada e a habilidade de
   adicionar um contexto de corrente (stream context).
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>hostname</parameter></term>
     <listitem>
      <para>
       Se você compilou <link linkend="openssl.installation">com suporte</link>
       a OpenSSL, você pode colocar os prefixos <literal>ssl://</literal> ou 
       <literal>tls://</literal> ao <parameter>hostname</parameter> para utilizar 
       SSL ou uma conexão cliente TLS sobre TCP/IP para conectar com o 
       host remoto.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>port</parameter></term>
     <listitem>
      <para>
       O número da porta.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>errno</parameter></term>
     <listitem>
      <para>
       Se informado, guarda o número do erro do sistema que aconteceu na chamada de
       <literal>connect()</literal> no nível do sistema.
      </para>
      <para>
       Se o valor retornado em <parameter>errno</parameter> é
       <literal>0</literal> e a função retornou &false;, é um indicativo que o
       erro aconteceu antes da chamada de 
       <literal>connect()</literal>. É bem provável que isso aconteça por um
       problema de inicialização de socket.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>errstr</parameter></term>
     <listitem>
      <para>
       A mensagem de erro como string.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>timeout</parameter></term>
     <listitem>
      <para>
       Timeout de conexão, em segundos.
      </para>
      <note>
       <para>
        Se você precisa de um timeout para ler/escrever dados através do
        socket, use <function>stream_set_timeout</function>, já que o
        parâmetro <parameter>timeout</parameter> de
        <function>fsockopen</function> somente é aplicado enquanto o socket
        está conectando.
       </para>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <function>fsockopen</function> retorna um ponteiro de arquivo que pode ser
   usado em em conjunto com outras funções de arquivo (como 
   <function>fgets</function>, <function>fgetss</function>,
   <function>fwrite</function>, <function>fclose</function>, e
   <function>feof</function>). Se a chamada falhar, ela retornará &false;.
  </para>
 </refsect1>
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Dispara um <constant>E_WARNING</constant> se <parameter>hostname</parameter> não
   é um domínio válido.
  </para>
 </refsect1>
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>4.3.0</entry>
       <entry>
        Adicionado suporte para o parâmetro <parameter>timeout</parameter> no
        win32.
       </entry>
      </row>
      <row>
       <entry>4.3.0</entry>
       <entry>
        Suporte a SSL e TLS sobre TCP/IP foi adicionado.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>fsockopen</function> Exemplo</title>
    <programlisting role="php">
<![CDATA[
<?php
$fp = fsockopen("www.example.com", 80, $errno, $errstr, 30);
if (!$fp) {
    echo "$errstr ($errno)<br />\n";
} else {
    $out = "GET / HTTP/1.1\r\n";
    $out .= "Host: www.example.com\r\n";
    $out .= "Connection: Close\r\n\r\n";
    fwrite($fp, $out);
    while (!feof($fp)) {
        echo fgets($fp, 128);
    }
    fclose($fp);
}
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Utilizando conexão UDP</title>
    <para>
     O exemplo abaixo mostra como recuperar o valor de dia e hora do serviço
     UDP (porta 13) da sua própria máquina.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$fp = fsockopen("udp://127.0.0.1", 13, $errno, $errstr);
if (!$fp) {
    echo "ERRO: $errno - $errstr<br />\n";
} else {
    fwrite($fp, "\n");
    echo fread($fp, 26);
    fclose($fp);
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Dependedendo do ambiente, o domínio Unix ou o opcional timeout de conexão
    não estarão disponíveis.
   </para>
  </note>
  <warning>
   <para>
    Sockets UDP algumas vezes irão parecer que foram abertos sem erro, mesmo
    que o host remoto seja inalcançável. O erro só se tornará aparente quando
    você ler ou escrever dados de/para o socket. A razão disso é porque o UDP
    é um protocolo "sem conexão", o que significa que o sistema operacional
    não tenta estabelecer uma ligação para o socket até que ele realmente
    precise enviar ou receber dados.
   </para>
  </warning>
  &ipv6.brackets;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pfsockopen</function></member>
    <member><function>stream_socket_client</function></member>
    <member><function>stream_set_blocking</function></member>
    <member><function>stream_set_timeout</function></member>
    <member><function>fgets</function></member>
    <member><function>fgetss</function></member>
    <member><function>fwrite</function></member>
    <member><function>fclose</function></member>
    <member><function>feof</function></member>
    <member><function>socket_connect</function></member>
    <member>A <link linkend="ref.curl">extensão Curl</link></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
