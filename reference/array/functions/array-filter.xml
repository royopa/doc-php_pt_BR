<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: 297028 Maintainer: felipe Status: ready --><!-- CREDITS: lucasr -->
<refentry xml:id="function.array-filter" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>array_filter</refname>
  <refpurpose>Filtra os elementos da array usando uma função de callback</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>array_filter</methodname>
   <methodparam><type>array</type><parameter>input</parameter></methodparam>
   <methodparam choice="opt"><type>callback</type><parameter>callback</parameter></methodparam>
  </methodsynopsis>
  <para>
   Itera sobre cada valor de
   <parameter>input</parameter> passando-os para a função
   <parameter>callback</parameter>. Se a função <parameter>
   callback</parameter> retornar true, o valor atual de
   <parameter>input</parameter> é retornado na matriz resultado.
   Os índices das matrizes são preservados.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>

    <varlistentry>
     <term><parameter>input</parameter></term>
     <listitem>
      <para>
       O array a ser iterado
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><parameter>callback</parameter></term>
     <listitem>
      <para>
       A função callback a ser usada
      </para>
      <para>
       Se nenhum <parameter>callback</parameter> é fornecido, todas entradas de
       <parameter>input</parameter> iguais a &false; (veja
       <link linkend="language.types.boolean.casting">convertendo para
        booleano</link>) serão removidas.
      </para>
     </listitem>
    </varlistentry>

   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna o array filtrado.
  </para>
 </refsect1>

<!--
 <refsect1 role="errors">
  &reftitle.errors;
  &errors.no.unusual.errors;
 </refsect1>
-->

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplo de <function>array_filter</function></title>
    <programlisting role="php">
<![CDATA[
<?php
function impar($var)
{
    return($var & 1);
}

function par($var)
{
    return(!($var & 1));
}

$array1 = array("a" => 1, "b" => 2, "c" => 3, "d" => 4, "e" => 5);
$array2 = array(6, 7, 8, 9, 10, 11, 12);

echo "Impares: \n";
print_r(array_filter($array1, "impar"));
echo "Pares: \n";
print_r(array_filter($array2, "par"));
?>
]]>
     </programlisting>
     &example.outputs;
     <screen role="php">
<![CDATA[
Impares:
Array
(
    [a] => 1
    [c] => 3
    [e] => 5
)
Pares:
Array
(
    [0] => 6
    [2] => 8
    [4] => 10
    [6] => 12
)
]]>
     </screen>
   </example>
   <example>
    <title><function>array_filter</function> sem
    <parameter>callback</parameter></title>
    <programlisting role="php">
<![CDATA[
<?php

$entry = array(
0 => 'foo',
1 => false,
2 => -1,
3 => null,
4 => ''
);

print_r(array_filter($entry));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
  [0] => foo
  [2] => -1
}
]]>
   </screen>
  </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <caution>
   <para>
    Se o array é modificado por uma função callback (e.g. elemento
    adicionado, deletado ou apagado) o comportamento desta função é indefinido.
   </para>
  </caution>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>array_map</function></member>
    <member><function>array_reduce</function></member>
    <member><function>array_walk</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
