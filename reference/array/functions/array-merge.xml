<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: n/a Maintainer: felipe Status: ready --><!-- CREDITS: lucasr -->
<refentry xml:id="function.array-merge" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>array_merge</refname>
  <refpurpose>Funde um ou mais arrays</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
   <methodsynopsis>
    <type>array</type><methodname>array_merge</methodname>
    <methodparam><type>array</type><parameter>array1</parameter></methodparam>
    <methodparam choice="opt"><type>array</type><parameter>array2</parameter></methodparam>
    <methodparam choice="opt"><type>array</type><parameter>...</parameter></methodparam>
   </methodsynopsis>
  <para>
   Funde os elementos dois ou mais arrays de forma que os elementos de um são 
   colocados no final do array anterior. Retorna o array resultante da fusão.
  </para>
  <para>
   Se os arrays dados têm as mesmas chaves string, então o último
   valor para uma chave irá sobrescrever o valor anterior. Se, no entanto,
   os arrays tem as mesmas chaves numéricas, o último valor para uma chave
   não sobrescreverá o valor original, e sim adicionado ao array
   resultante.
  </para>
  <para>
   Se apenas uma array é dada e a array é indexada numericamente,
   as chaves são reindexadas de uma maneira continua.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>array1</parameter></term>
     <listitem>
      <para>
       O array inicial para fundir.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>array</parameter></term>
     <listitem>
      <para>
       A lista variável de arrays para fundir recursivamente.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna o array resultante.
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplo de <function>array_merge</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$array1 = array("cor" => "vermelho", 2, 4);
$array2 = array("a", "b", "cor" => "verde", "forma" => "trapezoide", 4);
$result = array_merge($array1, $array2);
print_r($result);
?>
]]>
      </programlisting>
      &example.outputs;
       <screen role="php">
<![CDATA[
Array
(
    [cor] => verde
    [0] => 2
    [1] => 4
    [2] => a
    [3] => b
    [forma] => trapezoide
    [4] => 4
)
]]>
     </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Exemplo simples de <function>array_merge</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$array1 = array();
$array2 = array(1 => "data");
$result = array_merge($array1, $array2);
?>
]]>
    </programlisting>
    <para>
     Não esqueça que as chaves numéricas serão reordenadas!
    </para>
     <screen role="php">
<![CDATA[
Array
(
    [0] => data
)
]]>
     </screen>
    <para>
     Se você quer preservar os arrays e apenas concatená-los com
     outro (não sobreescrevendo as chaves anteriores), use o operador
     <literal>+</literal>:
    </para>
     <programlisting role="php">
<![CDATA[
<?php
$array1 = array();
$array2 = array(1 => "data");
$result = $array1 + $array2;
?>
]]>
     </programlisting>
     <para>
     As chaves numéricas serão preservadas e as associações originais
     permanecem.
     </para>
     <screen role="php">
<![CDATA[
Array
(
    [1] => data
)
]]>
     </screen>
   </example>
  </para>
  <warning>
   <para>
    O funcionamento de <function>array_merge</function> foi modificado no PHP 5.
    Diferentemente do PHP 4, <function>array_merge</function>
    agora aceita parâmetros do tipo <type>array</type>. Entretanto, você pode mudar o tipo
    para fundir outros tipos. Veja o exemplo abaixo para detalhes.
   </para>
   <para>
    <example>
     <title>Exemplo de <function>array_merge</function> no PHP 5</title>
      <programlisting role="php">
<![CDATA[
<?php
$beginning = 'foo';
$end = array(1 => 'bar');
$result = array_merge((array)$beginning, (array)$end);
print_r($result);
?>
]]>
     </programlisting>
      &example.outputs;
     <screen role="php">
<![CDATA[
Array
(
    [0] => foo
    [1] => bar
)
]]>
     </screen>
    </example>
   </para>
  </warning>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>array_merge_recursive</function></member>
    <member><function>array_combine</function></member>
    <member><link linkend="language.operators.array">array operators</link></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
