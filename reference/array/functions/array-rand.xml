<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: n/a Maintainer: felipe Status: ready --><!-- CREDITS: narigone, lucasr -->
<refentry xml:id="function.array-rand" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>array_rand</refname>
  <refpurpose>Retorna um ou mais elementos aleatórios de um array</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>array_rand</methodname>
   <methodparam><type>array</type><parameter>input</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>num_req</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>array_rand</function> é bastante útil quando se quer
   conseguir aleatoriamente um ou mais elementos de um array. 
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>input</parameter></term>
     <listitem>
      <para>
       O array de entrada.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>num_req</parameter></term>
     <listitem>
      <para>
       Especifica quantos elementos deseja obter - se não especificado,
       o padrão é 1.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Se estiver pegando apenas um elemento, <function>array_rand</function>
   retorna a chave para este elemento aleatório. De outra forma, ele retorna
   um array com as chaves desses elementos aleatórios. Assim é possível
   conseguir chaves e valores aleatórios a partir da mesma função.
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplo de <function>array_rand</function></title>
    <programlisting role="php">
<![CDATA[
<?php
srand((float) microtime() * 10000000);
$input = array("Neo", "Morpheus", "Trinity", "Cypher", "Tank");
$rand_keys = array_rand($input, 2);
echo $input[$rand_keys[0]] . "\n";
echo $input[$rand_keys[1]] . "\n";
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 <refsect1 role="notes">
  &reftitle.notes;
  &note.randomseed;
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>shuffle</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
