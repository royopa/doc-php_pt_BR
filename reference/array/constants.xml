<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: 297028 Maintainer: felipe Status: ready -->
<appendix xml:id="array.constants" xmlns="http://docbook.org/ns/docbook">
 &reftitle.constants;
 &extension.constants.core;
 <para>
 <variablelist>
  <varlistentry>
   <term>
    <constant>CASE_LOWER</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     <constant>CASE_LOWER</constant> é usada com a função 
     <function>array_change_key_case</function> e é usada em
     chaves de arrays para torná-las minúsculas. É o valor padrão utilizado em  
     <function>array_change_key_case</function>.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>CASE_UPPER</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     <constant>CASE_UPPER</constant> é usada com a função 
     <function>array_change_key_case</function> e é usada em
     chaves de arrays para torná-las maiúsculas.
    </simpara>
   </listitem>
  </varlistentry>
 </variablelist>
 </para>

 <para> Sinais de ordenação:
 <variablelist>
  <varlistentry>
   <term>
    <constant>SORT_ASC</constant> 
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     <constant>SORT_ASC</constant> é usada com
     <function>array_multisort</function> para ordenar em ordem crescente.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>SORT_DESC</constant> 
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     <constant>SORT_DESC</constant> é usada com
     <function>array_multisort</function> para ordenar em ordem descrescente.
    </simpara>
   </listitem>
  </varlistentry>
 </variablelist>
 </para>

 <para> Sinais de tipos de ordenação: usadas por várias funções de ordenação
 <variablelist>
  <varlistentry>
   <term>
    <constant>SORT_REGULAR</constant> 
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     <constant>SORT_REGULAR</constant> é usada para comparar itens normalmente.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>SORT_NUMERIC</constant> 
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     <constant>SORT_NUMERIC</constant> é usada para comparar itens numericamente.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>SORT_STRING</constant> 
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     <constant>SORT_STRING</constant> é usada para comparar itens como se
     fossem strings.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>SORT_LOCALE_STRING</constant> 
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     <constant>SORT_LOCALE_STRING</constant> é usada para comparar itens como se fossem
     strings, baseado no local atual. Adicionado no PHP 4.4.0 e 5.0.2.
    </simpara>
   </listitem>
  </varlistentry>
 </variablelist>
 </para>
 <variablelist>
  <varlistentry>
   <term>
    <constant>COUNT_NORMAL</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>COUNT_RECURSIVE</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>EXTR_OVERWRITE</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>EXTR_SKIP</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>EXTR_PREFIX_SAME</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>EXTR_PREFIX_ALL</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>EXTR_PREFIX_INVALID</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>EXTR_PREFIX_IF_EXISTS</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>EXTR_IF_EXISTS</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>EXTR_REFS</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
 </variablelist>
</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

