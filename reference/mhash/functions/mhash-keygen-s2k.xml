<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: 297028 Maintainer: rarruda Status: ready -->
<refentry xml:id="function.mhash-keygen-s2k" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>mhash_keygen_s2k</refname>
  <refpurpose>Gerar uma chave</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>mhash_keygen_s2k</methodname>
   <methodparam><type>int</type><parameter>hash</parameter></methodparam>
   <methodparam><type>string</type><parameter>password</parameter></methodparam>
   <methodparam><type>string</type><parameter>salt</parameter></methodparam>
   <methodparam><type>int</type><parameter>bytes</parameter></methodparam>
  </methodsynopsis>
  <para>
   Gera um chave de acordo com <parameter>hash</parameter> apartir de uma
   <parameter>password</parameter> (senha) do usuário.
  </para>
  <para>
   Este é o algoritmo Salted S2K como especificado no documento OpenPGP
   (<link xlink:href="&url.rfc;2440">RFC 2440</link>).
  </para>
  <para>
   Tenha em mente que as senhas fornecidas pelos usuários não são
   boas para serem usadas como chaves em algoritmos criptográficos,
   pois usuários normalmente escolhem chaves que eles podem escrever
   no teclado. Estas senhas usam somente 6 a 7 bits por caracter
   (ou menos). É altamente recomendado usar algum tipo de 
   transformação (como esta função) na chave dada pelo usuário.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>hash</parameter></term>
     <listitem>
      <para>
       O hash id usado para criar uma chave.
       Um das constantes <literal>MHASH_XXX</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>password</parameter></term>
     <listitem>
      <para>
       A senha fornecida do usuário.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>salt</parameter></term>
     <listitem>
      <para>
       Deve ser diferente e aleatório o suficiente para que cada chave que
       você gere seja diferente. Este salt tem que ser sabido quando
       você checar as suas chaves (keys), logo é uma boa ideia
       que a chave siga o salt. O salt tem o comprimento fixo de 8
       bytes e será completado com zeros se voce fornecer menos bytes.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>bytes</parameter></term>
     <listitem>
      <para>
       O tamanho da chave, em bytes.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna a chave gerada como uma string, ou &false; em erro.
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
