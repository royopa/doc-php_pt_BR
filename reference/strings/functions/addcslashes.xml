<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: n/a Maintainer: fernandoc Status: ready --><!-- CREDITS: surfmax -->
<refentry xml:id="function.addcslashes" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>addcslashes</refname>
  <refpurpose>String entre aspas com barras no estilo C</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>addcslashes</methodname>
   <methodparam><type>string</type><parameter>str</parameter></methodparam>
   <methodparam><type>string</type><parameter>charlist</parameter></methodparam>
  </methodsynopsis>
  <para>
   Retorna uma string com barras invertidas antes dos caracteres que
   estão listados no parâmetro <parameter>charlist</parameter>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>str</parameter></term>
     <listitem>
      <para>
       A string a receber escape.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>charlist</parameter></term>
     <listitem>
      <para>
       Uma lista de caractere para receber escape. Se
       <parameter>charlist</parameter> contém caracteres
       <literal>\n</literal>, <literal>\r</literal> etc., eles são
       convertidos na mesma forma que C, quando outros caracteres não-alfanumérico
       com códigos ASCII menor que 32 e maior que 126 são convertido para
       representação octal.
      </para>
      <para>
       Quando você define uma seqüencia de caracteres no argumento charlist
       certifique-se que você sabe quais os caracteres que vêm dentro do intervalo que você definiu.
       <informalexample>
        <programlisting role="php">
<![CDATA[
<?php
echo addcslashes('foo[ ]', 'A..z');
// output:  \f\o\o\[ \]
// All upper and lower-case letters will be escaped
// ... but so will the [\]^_` and any tabs, line
// feeds, carriage returns, etc.
?>
]]>
        </programlisting>
       </informalexample>
       Também, se o primeiro caracter no intervalo tem um valor ASCII maior
       do que o segundo, nenhum intervalo será construído.
       Apenas os caracteres do começo e do fim serão escapados.
       Use a função <function>ord</function> para encontrar
       o valor ASCII para um caracter.
       <informalexample>
        <programlisting role="php">
<![CDATA[
<?php
echo addcslashes("zoo['.']", 'z..A');
// output:  \zoo['\.']
?>
]]>
        </programlisting>
       </informalexample>
      </para>
      <para>
       Tenha cuidado se você escolheu adicionar escape nos caracteres 0, a, b, f, 
       n, r, t e v. Eles serão convertidos para \0, \a, \b, \f, \n, \r, \t
       e \v. No PHP \0 (NULL), \r (carriage return), \n (newline), \f (form feed),
       \v (vertical tab) e \t (tab) são pré-definidas seqüências de escape, 
       quando em C todos esses são pré-definidas seqüências de escape.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna a string com escapes.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.2.5</entry>
       <entry>
        As seqüências de escape \v e \f foram adicionadas.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <parameter>charlist</parameter> como "\0..\37", que
   adicionaria escape para todos caracteres com código ASCII entre 0 e 31.
   <example>
    <title>Exemplo da <function>addcslashes</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$escaped = addcslashes($not_escaped, "\0..\37!@\177..\377");
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>stripcslashes</function></member>
    <member><function>stripslashes</function></member>
    <member><function>addslashes</function></member>
    <member><function>htmlspecialchars</function></member>
    <member><function>quotemeta</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
