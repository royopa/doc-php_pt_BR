<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: 288721 Maintainer: felipe Status: ready --><!-- CREDITS: surfmax -->
<refentry xml:id="function.sscanf" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>sscanf</refname>
  <refpurpose>Interpreta a entrada de uma string de acordo com um formato</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>sscanf</methodname>
   <methodparam><type>string</type><parameter>str</parameter></methodparam>
   <methodparam><type>string</type><parameter>format</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter role="reference">...</parameter></methodparam>
  </methodsynopsis>
  <para>
   A função <function>sscanf</function> é análoga a <function>printf</function>. 
   <function>sscanf</function> lê da string <parameter>str</parameter> e interpreta 
   ela de acordo com o <parameter>formato</parameter> especificado. Como é descrito
   na documentação para <function>sprintf</function>.
  </para>
  <para>
   Qualquer espaço em branco na string de formato será comparada com qualquer espaço
   em branco na string de entrada. Isto significa que até mesmo um tab \t na string 
   de formato pode ser comparada com um caractere de espaço simples na string de 
   entrada.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>str</parameter></term>
     <listitem>
      <para>
       A <type>string</type> de entrada a ser analisada.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>format</parameter></term>
     <listitem>
      <para>
       O formato interpretado para <parameter>str</parameter>, que é
       descrito na documentação para <function>sprintf</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>...</parameter></term>
     <listitem>
      <para>
       Opcionalmente passe variáveis por referência que conterão os valores
       analisados.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Se apenas dois parâmetros forem passados para esta função, os valores interpretados
   serão retornados como array. Caso contrário, se parâmetros opcionais são passados,
   a função retornará o número de valores atribuídos. Os parâmetros opcionais
   precisam ser passados por referência.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplo da <function>sscanf</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// Pegando o número serial
list($serial) = sscanf("SN/2350001","SN/%d");
// e a data de criação
$mandate = "January 01 2000";
list($month, $day, $year) = sscanf($mandate,"%s %d %d");
echo "O Item $serial foi criado em: $year-".substr($month,0,3)."-$day\n";
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   Se parâmetros opcionais são passados, a função retornará o número de valores
   assumidos.
  </para>
  <para>
   <example>
    <title><function>sscanf</function> - usando parâmetros opcionais</title>
    <programlisting role="php">
<![CDATA[
<?php
// pega informação do autor e gera uma entrada de DocBook
$auth = "24\tLewis Carroll";
$n = sscanf($auth,"%d\t%s %s", $id, $first, $last);
echo "<author xml:id='$id'>
    <firstname>$first</firstname>
    <surname>$last</surname>
</author>\n";
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>fscanf</function></member>
    <member><function>printf</function></member>
    <member><function>sprintf</function></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
