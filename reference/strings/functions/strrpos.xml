<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: n/a Maintainer: felipe Status: ready -->
<!-- splitted from ./en/functions/strings.xml, last change in rev 1.8 -->
  <refentry xml:id="function.strrpos" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>strrpos</refname>
    <refpurpose>Encontra a posição da última ocorrência de um caractere em uma string</refpurpose>
   </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
     <methodsynopsis>
      <type>int</type><methodname>strrpos</methodname>
      <methodparam><type>string</type><parameter>haystack</parameter></methodparam>
      <methodparam><type>string</type><parameter>needle</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>offset</parameter></methodparam>
     </methodsynopsis>
    <para>
     Retorna a posição numérica da última ocorrência de 
     <parameter>needle</parameter> na string
     <parameter>haystack</parameter>.  Note que a needle neste caso pode apenas ser um simples caractere
      PHP 4. Se uma string é passada como a needle, então apenas o primeiro caractere dessa string será
      usado.
    </para>
    <para>
     Se <parameter>needle</parameter> não é encontrado, retorna &false;.
    </para>
    <para>
     É fácil errar a interpretação dos valores de retorno para  "character found at
     position 0" e "character not found".  Aqui segue um exemplo de como detectar
     a diferença:
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php

// no PHP 4.0.0 e posterior:
$pos = strrpos($mystring, "b");
if ($pos === false) { // note: três sinais iguais
    // não encontrado...
}

// em versões mais antigas do que 4.0.0:
$pos = strrpos($mystring, "b");
if (is_bool($pos) && !$pos) {
    // não encontrado...
}
?>
]]>
      </programlisting>
     </informalexample>
    </para>
    <para>
     Se <parameter>needle</parameter> não é uma string, ela é convertida para um inteiro e 
     aplicada como o valor ordinal de um caractere.
    </para>
  <note>
   <simpara>
    No PHP 5.0.0 o <parameter>offset</parameter> pode
    ser especificado para iniciar a busca num número arbitrário de caracteres dentro
    da string. Valores negativos irão parar a busca em um ponto arbitrário
    antes do final da string.
   </simpara>
  </note>
  <note>
   <simpara>
     A <parameter>needle</parameter> pode ser uma string de mais de um caractere no PHP 5.
   </simpara>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>haystack</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>needle</parameter></term>
     <listitem>
      <para>
    </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>offset</parameter></term>
     <listitem>
    <para>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
    </para>
   </refsect1>
   
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>strpos</function></member>
    <member><function>strripos</function></member>
    <member><function>strrchr</function></member>
    <member><function>substr</function></member>
    <member><function>stristr</function></member>
    <member><function>strstr</function></member>
   </simplelist>
  </para>
 </refsect1>

  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
