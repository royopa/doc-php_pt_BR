<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: n/a Maintainer: felipe Status: ready --><!-- CREDITS: narigone -->

<chapter xml:id="java.examples" xmlns="http://docbook.org/ns/docbook">
 &reftitle.examples;
 <section xml:id="java.examples-basic">
  <para>
   <example>
    <title>Exemplo da Java</title>
    <programlisting role="php">
<![CDATA[
<?php
// get instance of Java class java.lang.System in PHP
$system = new Java('java.lang.System');

// demonstrate property access
echo 'Java version=' . $system->getProperty('java.version') . '<br />';
echo 'Java vendor=' . $system->getProperty('java.vendor') . '<br />';
echo 'OS=' . $system->getProperty('os.name') . ' ' .
             $system->getProperty('os.version') . ' on ' .
             $system->getProperty('os.arch') . ' <br />';

// java.util.Date example
$formatter = new Java('java.text.SimpleDateFormat',
                      "EEEE, MMMM dd, yyyy 'at' h:mm:ss a zzzz");

echo $formatter->format(new Java('java.util.Date'));
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>Exemplo da AWT</title>
    <programlisting role="php">
<![CDATA[
<?php
// Este exemplo é pretendindo para ser executado em CLI.

$frame  = new Java('java.awt.Frame', 'PHP');
$button = new Java('java.awt.Button', 'Hello Java World!');

$frame->add('North', $button);
$frame->validate();
$frame->pack();
$frame->visible = True;

$thread = new Java('java.lang.Thread');
$thread->sleep(10000);

$frame->dispose();
?>
]]>
    </programlisting>
   </example>

   Notas:

   <itemizedlist>
    <listitem>
     <simpara>
      <literal>new Java()</literal> criará uma instância de uma classe se
      um construtor apropriado estiver disponível. Se nenhum parâmetros for passado e
      o construtor padrão for utilizável já que prove acesso à classes como
      <literal>java.lang.System</literal> que expõe a maior parte de suas
      funcionalidades através de métodos estáticos.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Acessar um membro de uma instância primeiro procurará por uma propriedade bean,
      depois por campos públicos. Em outras palavras, <literal>print $date.time</literal>
      elel primeiro tentará trabalhar com <literal>$date.getTime()</literal>,
      depois com <literal>$date.time</literal>.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Tanto membros estáticos como de instância podem ser acessados em um objeto com
      a mesma sintaxe. Além disso, se o objeto java é do tipo
      <literal>java.lang.Class</literal>, membros estáticos da classe
      (campos e métodos) podem ser acessados.
     </simpara>
    </listitem>
    <listitem>
     <para>
      Exceções disparadas resultam em avisos do PHP e em resultados &null;. Os
      avisos podem ser eliminados prefixando uma chamada de método com um
      sinal "@". As seguintes APIs podem ser usadas para obter e reniciar
      o último erro:
      <itemizedlist>
       <listitem><simpara><function>java_last_exception_get</function></simpara></listitem>
       <listitem><simpara><function>java_last_exception_clear</function></simpara></listitem>
      </itemizedlist>
     </para>
    </listitem>
    <listitem>
     <simpara>
      Resolução de sobrecarga em geral é um problema complicado dada às
      diferenças nos tipos entre as duas linguagens. A extensão Java
      aplica uma métrica simples, mas relativamente eficaz, para
      determinar qual sobrecarga é a melhor.
     </simpara>
     <simpara>
      Além disso, nomes de métodos no PHP não são sensíveis ao caso, potencialmente
      aumentando o número de sobrecargas a serem escolhidas.
     </simpara>
     <simpara>
      Uma vez que um método é escolhido, os parâmetros são alterados se necessário,
      possivelmente com perda de dados (exemplo: números de ponto flutuante de
      precisão dupla serão convertidos para booleano).
      <!-- FIXME Why aren't java-doubles converted to PHP-floats? Is this
      correct? -->
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Na tradição do PHP, arrays e hashtables podem ser usados de
      forma alternada. Perceba que hashtables no PHP só podem ser indexadas
      por inteiros e strings; e que arrays de tipos primitivos em Java
      não podem ser esparsos. Também note que essas estruturas são
      passadas por valor, então pode ter custo em termos de memória e tempo.
     </simpara>
    </listitem>
   </itemizedlist>
  </para>
 </section>
</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

