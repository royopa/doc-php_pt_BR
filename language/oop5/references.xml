<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: 297028 Maintainer: amandavale Status: ready -->
 <sect1 xml:id="language.oop5.references" xmlns="http://docbook.org/ns/docbook">
  <title>Objetos e Referências</title>
  <para>
   Um dos pontos-chave da programação orientada a objetos no PHP5 que é
   frequentemente mencionado é que "objetos são passados por referências por
   padrão". Isto não é completamente verdade. Esta seção retifica esse
   pensamento geral usando alguns exemplos.
  </para>

  <para>
   Uma referência PHP é um alias, que permite duas variáveis diferentes
   escreverem para o mesmo valor. A partir do PHP5, uma variável objeto não contém
   mais o próprio objeto como valor. Ela contém um identificador do objeto que
   permite que os acessadores do objeto encontrem o objeto real. Quando um
   objeto é enviado por argumento, retornado ou atribuído para outra variável,
   as variáveis diferentes não são aliases: elas armazenam uma cópia do
   identificador, que aponta para o mesmo objeto.
  </para>

  <example>
   <title>Referências e Objetos</title>
   <programlisting role="php">
<![CDATA[
<?php
class A {
    public $foo = 1;
}  

$a = new A;
$b = $a;     // $a and $b are copies of the same identifier
             // ($a) = ($b) = <id>
$b->foo = 2;
echo $a->foo."\n";


$c = new A;
$d = &$c;    // $c and $d are references
             // ($c,$d) = <id>

$d->foo = 2;
echo $c->foo."\n";


$e = new A;

function foo($obj) {
    // ($obj) = ($e) = <id>
    $obj->foo = 2;
}

foo($e);
echo $e->foo."\n";

?>  
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
2
2
2
]]>
   </screen>
  </example>
 </sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
