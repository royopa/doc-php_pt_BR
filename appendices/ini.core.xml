<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 329119 Maintainer: fibbarth Status: ready -->

 <section xml:id="ini.core" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>Descrição das principais diretivas do &php.ini;</title>
  <para>
   Esta lista inclui as principais diretivas do &php.ini;, que podemos
   definir para configurar o PHP. Diretivas manipuladas por extensões
   são listadas e detalhas na respectiva página de documentação da extensão;
   Informações sobre diretivas de sessões por exemplo, pode ser encontrada
   na  <link linkend="session.configuration">página de sessões</link>.
  </para>
  
  <section xml:id="ini.sect.httpd-options">
   <title>Opções Httpd</title>
   <para>
    <table>
     <title>Opções Httpd</title>
     <tgroup cols="4">
      <thead>
       <row>
        <entry>&Name;</entry>
        <entry>&Default;</entry>
        <entry>&Changeable;</entry>
        <entry>&Changelog;</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry>async_send</entry>
        <entry>"0"</entry>
        <entry>PHP_INI_ALL</entry>
        <entry></entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </para>
   <para>
   </para>
  </section>
  
  <section xml:id="ini.sect.language-options">
   <title>Opções de linguagem</title>
   <para>
    <table>
     <title>Linguagem e opções de configurações diversas</title>
     <tgroup cols="4">
      <thead>
       <row>
        <entry>&Name;</entry>
        <entry>&Default;</entry>
        <entry>&Changeable;</entry>
        <entry>&Changelog;</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry><link linkend="ini.short-open-tag">short_open_tag</link></entry>
        <entry>"1"</entry>
        <entry>PHP_INI_PERDIR</entry>
        <entry>PHP_INI_ALL in PHP 4.0.0. PHP_INI_PERDIR in PHP &gt;= 4.0.1.</entry>
       </row>
       <row>
        <entry><link linkend="ini.asp-tags">asp_tags</link></entry>
        <entry>"0"</entry>
        <entry>PHP_INI_PERDIR</entry>
        <entry>PHP_INI_ALL in PHP 4.0.0.</entry>
       </row>
       <row>
        <entry><link linkend="ini.precision">precision</link></entry>
        <entry>"14"</entry>
        <entry>PHP_INI_ALL</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.serialize-precision">serialize_precision</link></entry>
        <entry>"17"</entry>
        <entry>PHP_INI_ALL</entry>
        <entry>Disponível desde PHP 4.3.2. Até PHP 5.3.5, o valor padrão é 100.</entry>
       </row>
       <row>
        <entry><link linkend="ini.y2k-compliance">y2k_compliance</link></entry>
        <entry>"1"</entry>
        <entry>PHP_INI_ALL</entry>
        <entry>Removido no PHP 5.4.0.</entry>
       </row>
       <row>
        <entry><link linkend="ini.allow-call-time-pass-reference">allow_call_time_pass_reference</link></entry>
        <entry>"1"</entry>
        <entry>PHP_INI_PERDIR</entry>
        <entry>PHP_INI_ALL in PHP 4.0.0. Removido no PHP 5.4.0.</entry>
       </row>
       <row>
        <entry><link linkend="ini.disable-functions">disable_functions</link></entry>
        <entry>""</entry>
        <entry>&php.ini; only</entry>
        <entry>Disponível desde PHP 4.0.1.</entry>
       </row>
       <row>
        <entry><link linkend="ini.disable-classes">disable_classes</link></entry>
        <entry>""</entry>
        <entry>&php.ini; only</entry>
        <entry>Disponível desde PHP 4.3.2.</entry>
       </row>
       <row>
        <entry><link linkend="ini.exit-on-timeout">exit_on_timeout</link></entry>
        <entry>""</entry>
        <entry>PHP_INI_ALL</entry>
        <entry>Disponível desde PHP 5.3.0.</entry>
       </row>
       <row>
        <entry><link linkend="ini.expose-php">expose_php</link></entry>
        <entry>"1"</entry>
        <entry>&php.ini; apenas</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.zend.multibyte">zend.multibyte</link></entry>
        <entry>"0"</entry>
        <entry>PHP_INI_ALL</entry>
        <entry>Disponível desde PHP 5.4.0</entry>
       </row>
       <row>
        <entry><link linkend="ini.zend.script-encoding">zend.script_encoding</link></entry>
        <entry>NULL</entry>
        <entry>PHP_INI_ALL</entry>
        <entry>Disponível desde PHP 5.4.0</entry>
       </row>
       <row>
        <entry><link linkend="ini.zend.signal-check">zend.signal_check</link></entry>
        <entry>"0"</entry>
        <entry>PHP_INI_SYSTEM</entry>
        <entry>Disponível desde PHP 5.4.0</entry>
       </row>
       <row>
        <entry><link linkend="ini.zend.ze1-compatibility-mode">zend.ze1_compatibility_mode</link></entry>
        <entry>"0"</entry>
        <entry>PHP_INI_ALL</entry>
        <entry>Disponível desde PHP 5.0.0. Removido no PHP 5.3.0</entry>
       </row>
       <row>
        <entry><link linkend="ini.detect-unicode">detect_unicode</link></entry>
        <entry>"1"</entry>
        <entry>PHP_INI_ALL</entry>
        <entry>Disponível desde PHP 5.1.0. &removed.php.future;</entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </para>
   
   &ini.descriptions.title;
   
   <para>
    <variablelist>
     <varlistentry xml:id="ini.short-open-tag">
      <term>
       <parameter>short_open_tag</parameter>
       <type>boolean</type>
      </term>
      <listitem>
       <para>
        Diz ao PHP se a forma abreviada de abertura de tag (<userinput>&lt;? ?&gt;</userinput>)
        (<userinput>&lt;? ?&gt;</userinput>) está permitida. Se quiser usar PHP em 
        conjunto com XML, pode ser desabilitado esta opção a fim de 
        usar em linha <userinput>&lt;?xml ?&gt;</userinput>. Caso contrário, 
        pode-se imprimir com PHP, por exemplo <userinput>&lt;?php echo '&lt;?xml
        version="1.0"?&gt;'; ?&gt;</userinput>. Além disso, se se desabilitado, pode-se usar
        a forma extensa de abertura de tag (<userinput>&lt;?php ?&gt;</userinput>).
       </para>
       <note>
        <para>
         Esta diretiva também afeta a forma abreviada 
         <userinput>&lt;?=</userinput> anteriores ao PHP 5.4.0,
         que é a mesma que <userinput>&lt;? echo</userinput>.  Para uso desta abreviatura
         é necessário que <systemitem role="directive">short_open_tag</systemitem>
         esteja ativo. 
         Desde PHP 5.4.0, <userinput>&lt;?=</userinput> está sempre disponível.
        </para>
       </note>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.asp-tags">
      <term>
       <parameter>asp_tags</parameter>
       <type>boolean</type>
      </term>
      <listitem>
       <simpara>
        Ativa o uso do estilo ASP &lt;% %&gt; tags além da usual tag
        &lt;?php ?&gt;. Inclui a abreviatura de impressão da  variável-valor
        &lt;%= $value %&gt;. Para mais informações, veja
        <link linkend="language.basic-syntax.phpmode">Escaping from HTML</link>.
       </simpara>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.precision">
      <term>
       <parameter>precision</parameter>
       <type>integer</type>
      </term>
      <listitem>
       <simpara>
        O número de dígitos significativos mostrados em números de ponto flutuante.
      </simpara>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="ini.serialize-precision">
      <term>
       <parameter>serialize_precision</parameter>
       <type>integer</type>
      </term>
      <listitem>
       <simpara>
        O número de dígitos significativos armazenados durante a serialização de números de pontos
        flutuantes.
       </simpara>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.y2k-compliance">
      <term>
       <parameter>y2k_compliance</parameter>
       <type>boolean</type>
      </term>
      <listitem>
       <simpara>
        Assegura compatibilidade com ano 2000( irá causar problemas com navegadores não coompatíveis)
       </simpara>
      </listitem>
     </varlistentry>
     
     
     <varlistentry xml:id="ini.allow-call-time-pass-reference">
      <term>
       <parameter>allow_call_time_pass_reference</parameter>
       <type>boolean</type>
      </term>
      <listitem>
       <para>
        Serve para avisar quando argumentos são passados por referência durante chamadas de funções.
        O método recomendado para específicar quais argumentos deveriam ser passados por 
        referência está na declaração da função. Recomendado tentar alterar esta função
        para Off e garantir que seus scripts funcionam corretamente a fim de garantir
        que eles executam com futuras versões da linguagem (pode-se receber uma mensagem de warning 
        toda vez que for usado este recurso).
       </para>
       <para>
        Passagem de argumentos por referência durante chamadas de função está obsoleta
        por razões de limpreza código. Uma função pode modificar estes argumentos maneira 
        não documentada se não declarar que o argumento deve ser passado por referência. 
        Para previnir efeitos colaterais é melhor especificar quais argumentos devem ser passados
        por referência apenas na declaração da função.
       </para>
       <para>
        Veja também <link linkend="language.references">Explicação  sobre referências</link>.
       </para>
       <para>
        <table>
         <title>Log de mundaças de <literal>allow_call_time_pass_reference</literal></title>
         <tgroup cols="2">
          <thead>
           <row>
            <entry>&Version;</entry>
            <entry>&Description;</entry>
           </row>
          </thead>
          <tbody>
           <row>
            <entry>5.4.0</entry>
            <entry>
             Removido do PHP.
            </entry>
           </row>
           <row>
            <entry>5.3.0</entry>
            <entry>
             Emite um nível de erro <constant>E_DEPRECATED</constant>.
            </entry>
           </row>
           <row>
            <entry>5.0.0</entry>
            <entry>
             Obsoleta, gera um nível de erro <constant>E_COMPILE_WARNING</constant>.
            </entry>
           </row>
          </tbody>
         </tgroup>
        </table>
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.expose-php">
      <term>
       <parameter>expose_php</parameter>
       <type>boolean</type>
      </term>
      <listitem>
       <para>
        Expõe para o mundo que o PHP está instalado no servidor, inclui a versão do PHP
        dentro do header HTTP (e.g., X-Powered-By: PHP/5.3.7).
        Antes do PHP 5.5.0 o logotipo guids do PHP também são expostos, de modo que,
        quando adicionado à URL do seu script PHP, será mostrado o logotipo correspondente 
        (e.g., <link xlink:href="&url.php;?=PHPE9568F34-D428-11d2-A769-00AA001ACF42">&url.php;?=PHPE9568F34-D428-11d2-A769-00AA001ACF42</link>).
        Isto também afeta a saída do <function>phpinfo</function>, quando desabilitado, o logotipo PHP
        as informações de créditos não serão mostradas.
       </para>
       <note>
        <para>
         Desde o PHP 5.5.0, estes GUID e função <function>php_logo_guid</function> foi removida do PHP e GUID 
         foram substituídos por dados com URIs. Portanto, não funciona mais o acesso ao 
         logotipo PHP adicionando o GUID para o URL. Similarmente, desativar <parameter>expose_php</parameter> não afeta a 
         exibição de logotipo PHP <function>phpinfo</function>.
        </para>
       </note>
       <para>       
        Veja também <function>php_logo_guid</function> e <function>phpcredits</function>.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.disable-functions">
      <term>
       <parameter>disable_functions</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        Esta diretiva permite você desabilitar certas funções por
        razões de <link linkend="security">segurança</link>. Recebe uma 
        lista de nomes delimitada por vírgulas. disable_functions não
        não é afetado pelo <link linkend="ini.safe-mode">Modo Seguro</link>.
       </para>
       <para>
        Apenas <link linkend="functions.internal">funções internas</link> podem
        ser dsabilitadas usando esta diretiva. <link linkend="functions.user-defined">Funções definidas pelo Usuário</link>
        não são afetadas.
       </para>
       <para>
        Esta diretiva deve ser configurada no &php.ini;, por exemplo, não pode ser 
        configurada dentro do &httpd.conf;.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.disable-classes">
      <term>
       <parameter>disable_classes</parameter>
       <type>string</type>
      </term>
      <listitem>
       <simpara>
        Esta diretiva permite desabilitar certas classes por 
        razões de <link linkend="security">segurança</link>. Recebe
        uma lista de nomes de classes. disable_classes não é afetada
        pelo <link linkend="ini.safe-mode">Modo Seguro</link>.
       </simpara>
       <simpara>
        Esta diretiva dese ver configurada no &php.ini;, por exemplo, 
        não pode ser configurada no &httpd.conf;. 
       </simpara>
       <note>
        <title>Nota sobre disponibilidade</title>
        <simpara>
         Esta diretiva tornou-se disponível no PHP 4.3.2
        </simpara>
       </note>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.zend.ze1-compatibility-mode">
      <term>
       <parameter>zend.ze1_compatibility_mode</parameter>
       <type>boolean</type>
      </term>
      <listitem>
       <para>
        Ativa modo de compatibilidade com Zend Engine 1 (PHP 4). Afeta a clonagem, 
        conversão ( objetos sem propriedades são convertidos para &false; ou 0), e
        <link linkend="language.oop5.object-comparison">comparação de objetos</link>.
        Neste modo, objetos são passados por valor, em vez de por referência como padrão.
       </para>
       <para>
        Veja também seção entitulada 
        <link linkend="migration5">Migrando do PHP 4 para o PHP 5</link>.
       </para>
       <warning>
        <simpara>
        Este recurso se tornou <emphasis>OBSOLETO</emphasis> e foi <emphasis>REMOVIDO</emphasis>
        do PHP 5.3.0
        </simpara>
       </warning>
       
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.zend.multibyte">
      <term>
       <parameter>zend.multibyte</parameter>
       <type>boolean</type>
      </term>
      <listitem>
       <para>
        Permite a análise de arquivos fontes em codificações multibytes.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.zend.script-encoding">
      <term>
       <parameter>zend.script_encoding</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        Este valor vai ser usado, a menos que diretiva
        <link linkend="control-structures.declare.encoding">declare(encoding=...)</link>
        apareça no início do script.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.zend.signal-check">
      <term>
       <parameter>zend.signal_check</parameter>
       <type>boolean</type>
      </term>
      <listitem>
       <para>
        Para verificar se manipuladores de sinais são substituídos no encerramento. 
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.detect-unicode">
      <term>
       <parameter>detect_unicode</parameter>
       <type>boolean</type>
      </term>
      <listitem>
       <para>
        Verifica o BOM (Byte Order Mark) e vê se o arquivo contêm caracteres 
        multibyte válidos.
        Esta detecção é formado antes do processamento do 
        <function>__halt_compiler</function>.
        Disponível apenas no modo Zend Multibyte
       </para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="ini.exit-on-timeout">
      <term>
       <parameter>exit_on_timeout</parameter>
       <type>boolean</type>
      </term>
      <listitem>
       <para>
        Esta é uma diretiva mod_php-only Apache1que força um subprocesso do Apache para sair se um execução PHP ocorre um timeout.
        Esse timeout causa uma chamada interna longjmp() no Apache1 que pode deixar alguma extensão em um estado
        inconscitente. Ao terminar o processo, será limpo de qualquer bloqueio pendente ou da memória.
       </para>
      </listitem>
     </varlistentry>
     
    </variablelist>
   </para>
  </section>
  
  <section xml:id="ini.sect.resource-limits">
   <title>Limite de Recursos</title>
   <para>
    <table>
     <title>Limite de Recursos</title>
     <tgroup cols="4">
      <thead>
       <row>
        <entry>&Name;</entry>
        <entry>&Default;</entry>
        <entry>&Changeable;</entry>
        <entry>&Changelog;</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry><link linkend="ini.memory-limit">memory_limit</link></entry>
        <entry>"128M"</entry>
        <entry>PHP_INI_ALL</entry>
        <entry>"8M" antes PHP 5.2.0, "16M" no PHP 5.2.0</entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </para>
   
   &ini.descriptions.title;
   
   <para>
    <variablelist>
     <varlistentry xml:id="ini.memory-limit">
      <term>
       <parameter>memory_limit</parameter>
       <type>integer</type>
      </term>
      <listitem>
       <para>
        Define a quantidade máxima de memória em bytes que um script
        está permitido alocar. Isto ajuda a previnir que scripts mal escritos
        consumam toda memória disponível no servidor. Note que 
        para não ter limite de memória, defina esta diretiva para <literal>-1</literal>.
       </para>
       <para>
        Antes do PHP 5.2.1, para utilizar esta diretiva é necessário 
        que seja habilitado em tempo de execução usando 
        <option role="configure">--enable-memory-limit</option> no linha 
        de comando. Esta flag em tempo de execução também é necessária para
        definir as funções <function>memory_get_usage</function> e
        <function>memory_get_peak_usage</function> em versões anteriores
        à 5.2.1.
       </para>
       
       &ini.shorthandbytes;
       
      </listitem>
     </varlistentry>
    </variablelist>
   </para>
   <para>
    Veja também: <link linkend="ini.max-execution-time">max_execution_time</link>.
   </para>
  </section>
  
  <section xml:id="ini.sect.performance">
   <title>Ajuste de Desempenho</title>
   <para>
    <table>
     <title>Ajuste de Desempenho</title>
     <tgroup cols="4">
      <thead>
       <row>
        <entry>&Name;</entry>
        <entry>&Default;</entry>
        <entry>&Changeable;</entry>
        <entry>&Changelog;</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry><link linkend="ini.realpath-cache-size">realpath_cache_size</link></entry>
        <entry>"16K"</entry>
        <entry>PHP_INI_SYSTEM</entry>
        <entry>Disponível desde PHP 5.1.0.</entry>
       </row>
       <row>
        <entry><link linkend="ini.realpath-cache-ttl">realpath_cache_ttl</link></entry>
        <entry>"120"</entry>
        <entry>PHP_INI_SYSTEM</entry>
        <entry>Disponível desde PHP 5.1.0.</entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </para>
   &ini.descriptions.title;
   <para>
    <variablelist>
     <varlistentry xml:id="ini.realpath-cache-size">
      <term>
       <parameter>realpath_cache_size</parameter>
       <type>integer</type>
      </term>
      <listitem>
       <para>
        Determina o tamanho de cache do realpath para ser usado pelo PHP. Este
        valor deve ser aumentado em sistemas onde PHP abre muitos arquivos, para refletir
        a quantidade das operações realizadas com os arquivos.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="ini.realpath-cache-ttl">
      <term>
       <parameter>realpath_cache_ttl</parameter>
       <type>integer</type>
      </term>
      <listitem>
       <para>
        Tempo de duração (em segundos) para que o cache de informações do realpath
        para um dado arquivo ou diretório. Para sistemas que arquivos raramente mudam,
        considere aumentar o valor.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>
  </section>
  
  <section xml:id="ini.sect.data-handling">
   <title>Manipulação de Dados</title>
   <para>
    <table>
     <title>Opções de Manipulação de Dados</title>
     <tgroup cols="4">
      <thead>
       <row>
        <entry>&Name;</entry>
        <entry>&Default;</entry>
        <entry>&Changeable;</entry>
        <entry>&Changelog;</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry><link linkend="ini.track-vars">track_vars</link></entry>
        <entry>"On"</entry>
        <entry>PHP_INI_??</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.arg-separator.output">arg_separator.output</link></entry>
        <entry>"&amp;"</entry>
        <entry>PHP_INI_ALL</entry>
        <entry>Disponível desde PHP 4.0.5.</entry>
       </row>
       <row>
        <entry><link linkend="ini.arg-separator.input">arg_separator.input</link></entry>
        <entry>"&amp;"</entry>
        <entry>PHP_INI_PERDIR</entry>
        <entry>Disponível desde PHP 4.0.5.</entry>
       </row>
       <row>
        <entry><link linkend="ini.variables-order">variables_order</link></entry>
        <entry>"EGPCS"</entry>
        <entry>PHP_INI_PERDIR</entry>
        <entry>PHP_INI_ALL in PHP &lt;= 5.0.5.</entry>
       </row>
       <row>
        <entry><link linkend="ini.request-order">request_order</link></entry>
        <entry>""</entry>
        <entry>PHP_INI_PERDIR</entry>
        <entry>Disponível desde PHP 5.3.0</entry>
       </row>
       <row>
        <entry><link linkend="ini.auto-globals-jit">auto_globals_jit</link></entry>
        <entry>"1"</entry>
        <entry>PHP_INI_PERDIR</entry>
        <entry>Disponível desde PHP 5.0.0.</entry>
       </row>
       <row>
        <entry><link linkend="ini.register-globals">register_globals</link></entry>
        <entry>"0"</entry>
        <entry>PHP_INI_PERDIR</entry>
        <entry>PHP_INI_ALL in PHP &lt;= 4.2.3. Removido no PHP 5.4.0.</entry>
       </row>
       <row>
        <entry><link linkend="ini.register-argc-argv">register_argc_argv</link></entry>
        <entry>"1"</entry>
        <entry>PHP_INI_PERDIR</entry>
        <entry>PHP_INI_ALL in PHP &lt;= 4.2.3.</entry>
       </row>
       <row>
        <entry><link linkend="ini.register-long-arrays">register_long_arrays</link></entry>
        <entry>"1"</entry>
        <entry>PHP_INI_PERDIR</entry>
        <entry>Disponível desde PHP 5.0.0. Deprecated in PHP 5.3.0. Removido no PHP 5.4.0.</entry>
       </row>
       <row>
        <entry><link linkend="ini.enable-post-data-reading">enable_post_data_reading</link></entry>
        <entry>"1"</entry>
        <entry>PHP_INI_PERDIR</entry>
        <entry>Disponível desde PHP 5.4.0</entry>
       </row>
       <row>
        <entry><link linkend="ini.post-max-size">post_max_size</link></entry>
        <entry>"8M"</entry>
        <entry>PHP_INI_PERDIR</entry>
        <entry>PHP_INI_SYSTEM in PHP &lt;= 4.2.3. Disponível desde PHP 4.0.3.</entry>
       </row>
       <row>
        <entry><link linkend="ini.gpc-order">gpc_order</link></entry>
        <entry>"GPC"</entry>
        <entry>PHP_INI_ALL</entry>
        <entry>Removido no PHP 5.0.0.</entry>
       </row>
       <row>
        <entry><link linkend="ini.auto-prepend-file">auto_prepend_file</link></entry>
        <entry>NULL</entry>
        <entry>PHP_INI_PERDIR</entry>
        <entry>PHP_INI_ALL in PHP &lt;= 4.2.3.</entry>
       </row>
       <row>
        <entry><link linkend="ini.auto-append-file">auto_append_file</link></entry>
        <entry>NULL</entry>
        <entry>PHP_INI_PERDIR</entry>
        <entry>PHP_INI_ALL in PHP &lt;= 4.2.3.</entry>
       </row>
       <row>
        <entry><link linkend="ini.default-mimetype">default_mimetype</link></entry>
        <entry>"text/html"</entry>
        <entry>PHP_INI_ALL</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.default-charset">default_charset</link></entry>
        <entry>""</entry>
        <entry>PHP_INI_ALL</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.always-populate-raw-post-data">always_populate_raw_post_data</link></entry>
        <entry>"0"</entry>
        <entry>PHP_INI_PERDIR</entry>
        <entry>PHP_INI_ALL in PHP &lt;= 4.2.3. Disponível desde PHP 4.1.0.</entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </para>
   
   &ini.descriptions.title;
   
   <para>
    <variablelist>
     <varlistentry xml:id="ini.track-vars">
      <term>
       <parameter>track_vars</parameter>
       <type>boolean</type>
      </term>
      <listitem>
       <para>
        Se habilitado, as variáveis de Ambiente, GET, POST, Cookie, e Servidor
        pode ser encontradas nos arrays associativos globais.  
        <varname>$_ENV</varname>,
        <varname>$_GET</varname>,
        <varname>$_POST</varname>,
        <varname>$_COOKIE</varname>, e
        <varname>$_SERVER</varname>.
       </para>
       <para>
        Note que PHP 4.0.3, 
        <systemitem
        role="directive">track_vars</systemitem> está sempre ligado.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.arg-separator.output">
      <term>
       <parameter>arg_separator.output</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        O separador usado em URLs geradas pelo PHP para separar argumentos.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.arg-separator.input">
      <term>
       <parameter>arg_separator.input</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        Lista de separadores usados pelo PHP para analisar URLs de entrada em variáveis. 
       </para>
       <note>
        <para>
         Cada caracter na diretiva é considerado como separador!
        </para>
       </note>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.variables-order">
      <term>
       <parameter>variables_order</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        Define a ordem de interpretação das variáveis EGPCS (<literal>E</literal>nvironment,
        <literal>G</literal>et, <literal>P</literal>ost,
        <literal>C</literal>ookie, e <literal>S</literal>erver).
        Por exemplo, se variables_order está defindo para <literal>"SP"</literal>
        então o PHP vai criar o &link.superglobals; <varname>$_SERVER</varname>
        e <varname>$_POST</varname>, mas não irá criar <varname>$_ENV</varname>, 
        <varname>$_GET</varname>, e <varname>$_COOKIE</varname>.
        
        parsing. For example, if variables_order
        is set to <literal>"SP"</literal> then PHP will create the
        &link.superglobals; <varname>$_SERVER</varname> and
        <varname>$_POST</varname>, but not create
        <varname>$_ENV</varname>, <varname>$_GET</varname>, and
        <varname>$_COOKIE</varname>. Para "" significa que &link.superglobals;
        não será definida.
       </para>
       <para>
        Se a diretiva obsoleta <link linkend="ini.register-globals">register_globals</link>
        está ativada, então variables_order também configura a ordem que as variáveis
        <literal>ENV</literal>, <literal>GET</literal>, <literal>POST</literal>,
        <literal>COOKIE</literal> e <literal>SERVER</literal> são preenchidas no escopo 
        global. Por exemplo, se variables_order está definida para <literal>"EGPCS"</literal>,
        register_globals está ativada, e ambos <varname>$_GET['action']</varname> e
        <varname>$_POST['action']</varname> estão definidos, então <varname>$action</varname>
        vai conter o valor do <varname>$_POST['action']</varname> como <literal>P</literal> vem depois
        <literal>G</literal> em nosso exemplo do valor da diretiva.
       </para>
       <warning>
        <para>
         Em ambos CGI e FastCGI SAPIs,
         <varname>$_SERVER</varname> é também preenchido por valores de ambiente;
         <literal>S</literal> é sempre equivalente à <literal>ES</literal> independentemente do 
         lugar do <literal>E</literal> nesta diretiva.
        </para>
       </warning>
       <note>
        <para>
         O conteúdo e ordem do <varname>$_REQUEST</varname> 
         é também afetada por esta diretiva.
        </para>
       </note>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.request-order">
      <term>
       <parameter>request_order</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        Esta diretiva descreve a ordem na qual PHP regista as variáves GET, POST, e Cookie
        no array _REQUEST. Registro é feito da esquerda para direita, valores mais recentes 
        sobreescrevem os valores antigos.
       </para>
       <para>
        Se esta diretiva não está definida, <link
        linkend="ini.variables-order">variables_order</link> é usado para conteúdo 
        <varname>$_REQUEST</varname>.
       </para>
       <para>
        Note que a distribuição padrão do arquivo <filename>php.ini</filename> não contém 
        o <literal>'C'</literal> para cookies, por motivos de segurança.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.auto-globals-jit">
      <term>
       <parameter>auto_globals_jit</parameter>
       <type>boolean</type>
      </term>
      <listitem>
       <para>
        Quando ativado, as variáveis SERVER e ENV são criadas quando elas são 
        usadas pela primeira vez ("Just In Time"), ao invés  de quando o script inicia.
        Se estas variáveis não são usadas dentro de um script, esta diretiva resultará 
        em um ganho de desempenho. 
       </para>
       <para>
        As diretivas PHP
        The PHP directives
        <link linkend="ini.register-globals">register_globals</link>,
        <link linkend="ini.register-long-arrays">register_long_arrays</link>,
        e <link linkend="ini.register-argc-argv">register_argc_argv</link>
        devem ser desabilitadas para esta diretiva ter algum efeito. Desde
        PHP 5.1.3 não é necessário que <link
        linkend="ini.register-argc-argv">register_argc_argv</link> esteja desabilitado.
       </para>
       <warning>
        <para>
         Uso das variáveis SERVER e ENV é verificada durante tempo de compilação
         fazendo uso através e.g. <link
         linkend="language.variables.variable">variable variables</link> não causará sua 
         inicialização.        
        </para>
       </warning>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.register-globals">
      <term>
       <parameter>register_globals</parameter>
       <type>boolean</type>
      </term>
      <listitem>
       <para>
        Whether or not to register the EGPCS (Environment, GET,
        POST, Cookie, Server) variables as global variables.
       </para>
       <para>
        As of <link xlink:href="&url.php.release4.2.0;">PHP 4.2.0</link>,
        this directive defaults to <emphasis>off</emphasis>.
       </para>
       <para>
        Please read the security chapter on
        <link linkend="security.globals">Using register_globals</link>
        for related information.
       </para>
       <para>
        Please note that <systemitem role="directive">register_globals</systemitem>
        cannot be set at runtime (<function>ini_set</function>). Although, you can
        use &htaccess; if your host allows it as described
        above. An example &htaccess; entry:
        <userinput>php_flag register_globals off</userinput>.
       </para>
       <note>
        <para>
         <systemitem role="directive">register_globals</systemitem> is affected
         by the <link linkend="ini.variables-order">variables_order</link>
         directive.
        </para>
       </note>
       &warn.deprecated.feature-5-3-0.removed-5-4-0;
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.register-argc-argv">
      <term>
       <parameter>register_argc_argv</parameter>
       <type>boolean</type>
      </term>
      <listitem>
       <simpara>
        Tells PHP whether to declare the argv &amp; argc variables
        (that would contain the GET information).
       </simpara>
       <simpara>
        See also <link linkend="features.commandline">command line</link>.
       </simpara>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.register-long-arrays">
      <term>
       <parameter>register_long_arrays</parameter>
       <type>boolean</type>
      </term>
      <listitem>
       <simpara>
        Tells PHP whether or not to register the deprecated long
        <varname>$HTTP_*_VARS</varname> type
        <link linkend="language.variables.predefined">predefined
         variables</link>.  When On (default), long predefined PHP
        variables like <varname>$HTTP_GET_VARS</varname> will be defined.
        If you're not using them, it's recommended to turn them off,
        for performance reasons.  Instead, use the superglobal arrays,
        like <varname>$_GET</varname>.
       </simpara>
       <simpara>
        This directive became available in PHP 5.0.0.
       </simpara>
       &warn.deprecated.feature-5-3-0.removed-5-4-0;
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.enable-post-data-reading">
      <term>
       <parameter>enable_post_data_reading</parameter>
       <type>boolean</type>
      </term>
      <listitem>
       <simpara>
        Disabling this option causes <varname>$_POST</varname> and
        <varname>$_FILES</varname> <emphasis>not</emphasis> to be populated.
        The only way to read postdata will then be through the
        <link linkend="wrappers.php">php://input</link> stream wrapper.
        This can be useful to proxy requests or to process
        the POST data in a memory efficient fashion.
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="ini.post-max-size">
      <term>
       <parameter>post_max_size</parameter>
       <type>integer</type>
      </term>
      <listitem>
       <simpara>
        Sets max size of post data allowed. This setting also affects
        file upload. To upload large files, this value must be larger
        than <link linkend="ini.upload-max-filesize">upload_max_filesize</link>.
       </simpara>
       <simpara>
        If memory limit is enabled by your configure script, <link
        linkend="ini.memory-limit">memory_limit</link> also affects
        file uploading. Generally speaking,
        <link linkend="ini.memory-limit">memory_limit</link> should be
        larger than <parameter>post_max_size</parameter>.
       </simpara>
       
       &ini.shorthandbytes;
       
       <simpara>
        If the size of post data is greater than post_max_size, the
        <varname>$_POST</varname> and <varname>$_FILES</varname>
        <link linkend="language.variables.superglobals">superglobals</link>
        are empty. This can be tracked in various ways, e.g. by passing the
        <varname>$_GET</varname> variable to the script processing the data,
        i.e. <literal>&lt;form action="edit.php?processed=1"&gt;</literal>,
        and then checking if <varname>$_GET['processed']</varname> is set.
       </simpara>
       <para>
        <note>
         <para>
          PHP allows shortcuts for bit values, including K (kilo), M (mega) 
          and G (giga). PHP will do the conversions automatically if you 
          use any of these. Be careful not to exceed the 32 bit signed integer 
          limit (if you're using 32bit versions) as it will cause your script 
          to fail.
         </para>
        </note>
       </para>
       
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.gpc-order">
      <term>
       <parameter>gpc_order</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        Set the order of GET/POST/COOKIE variable parsing. The
        default setting of this directive is "GPC".  Setting this to
        "GP", for example, will cause PHP to completely ignore cookies
        and to overwrite any GET method variables with POST-method
        variables of the same name.
       </para>
       <note>
        <para>
         Esta opção foi removida no PHP 5.0.0.
         Em vez disso use <link linkend="ini.variables-order">variables_order</link>.
        </para>
       </note>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.auto-prepend-file">
      <term>
       <parameter>auto_prepend_file</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        Specifies the name of a file that is automatically parsed
        before the main file.  The file is included as if it was
        called with the <function>require</function> function, so
        <link linkend="ini.include-path">include_path</link> is used.</para>
       <para>
        The special value <literal>none</literal>
        disables auto-prepending.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.auto-append-file">
      <term>
       <parameter>auto_append_file</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        Specifies the name of a file that is automatically parsed
        after the main file.  The file is included as if it was
        called with the <function>require</function> function, so
        <link linkend="ini.include-path">include_path</link> is used.</para>
       <para>
        The special value <literal>none</literal>
        disables auto-appending.
        <note>
         <simpara>
          If the script is terminated with <function>exit</function>,
          auto-append will <emphasis>not</emphasis> occur.</simpara>
        </note>
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.default-mimetype">
      <term>
       <parameter>default_mimetype</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.default-charset">
      <term>
       <parameter>default_charset</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        PHP always outputs a character encoding by default in
        the Content-type: header. To disable sending of the charset, simply
        set it to be empty.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.always-populate-raw-post-data">
      <term>
       <parameter>always_populate_raw_post_data</parameter>
       <type>boolean</type>
      </term>
      <listitem>
       <para>
        Always populate the <varname>$HTTP_RAW_POST_DATA</varname> containing
        the raw POST data. Otherwise, the variable is populated only with
        unrecognized MIME type of the data. However, the preferred method for
        accessing the raw POST data is <link
        linkend="wrappers.php">php://input</link>.
        <varname>$HTTP_RAW_POST_DATA</varname> is not available with
        <literal>enctype="multipart/form-data"</literal>.
       </para>
      </listitem>
     </varlistentry>
     
    </variablelist>
   </para>
   <para>
    See also: <link linkend="ini.magic-quotes-gpc">magic_quotes_gpc</link>,
    <link linkend="ini.magic-quotes-runtime">magic_quotes_runtime</link>,
    and
    <link linkend="ini.magic-quotes-sybase">magic_quotes_sybase</link>.
   </para>
  </section>
  
  <section xml:id="ini.sect.path-directory">
   <title>Paths and Directories</title>
   <para>
    <table>
     <title>Paths and Directories Configuration Options</title>
     <tgroup cols="4">
      <thead>
       <row>
        <entry>&Name;</entry>
        <entry>&Default;</entry>
        <entry>&Changeable;</entry>
        <entry>&Changelog;</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry><link linkend="ini.include-path">include_path</link></entry>
        <entry>".;/path/to/php/pear"</entry>
        <entry>PHP_INI_ALL</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.open-basedir">open_basedir</link></entry>
        <entry>NULL</entry>
        <entry>PHP_INI_ALL</entry>
        <entry>PHP_INI_SYSTEM in PHP &lt; 5.3.0</entry>
       </row>
       <row>
        <entry><link linkend="ini.doc-root">doc_root</link></entry>
        <entry>NULL</entry>
        <entry>PHP_INI_SYSTEM</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.user-dir">user_dir</link></entry>
        <entry>NULL</entry>
        <entry>PHP_INI_SYSTEM</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.extension-dir">extension_dir</link></entry>
        <entry>"/path/to/php"</entry>
        <entry>PHP_INI_SYSTEM</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.extension">extension</link></entry>
        <entry>NULL</entry>
        <entry>&php.ini; only</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.zend-extension">zend_extension</link></entry>
        <entry>NULL</entry>
        <entry>&php.ini; only</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.zend-extension-debug">zend_extension_debug</link></entry>
        <entry>NULL</entry>
        <entry>&php.ini; only</entry>
        <entry>Available before PHP 5.3.0.</entry>
       </row>
       <row>
        <entry><link linkend="ini.zend-extension-debug-ts">zend_extension_debug_ts</link></entry>
        <entry>NULL</entry>
        <entry>&php.ini; only</entry>
        <entry>Available before PHP 5.3.0.</entry>
       </row>
       <row>
        <entry><link linkend="ini.zend-extension-ts">zend_extension_ts</link></entry>
        <entry>NULL</entry>
        <entry>&php.ini; only</entry>
        <entry>Available before PHP 5.3.0.</entry>
       </row>
       <row>
        <entry><link linkend="ini.cgi.check-shebang-line">cgi.check_shebang_line</link></entry>
        <entry>"1"</entry>
        <entry>PHP_INI_SYSTEM</entry>
        <entry>Disponível desde PHP 5.2.0.</entry>
       </row>
       <row>
        <entry><link linkend="ini.cgi.fix-pathinfo">cgi.fix_pathinfo</link></entry>
        <entry>"1"</entry>
        <entry>PHP_INI_SYSTEM</entry>
        <entry>Disponível desde PHP 4.3.0. PHP_INI_ALL prior to PHP 5.2.1.</entry>
       </row>
       <row>
        <entry><link linkend="ini.cgi.force-redirect">cgi.force_redirect</link></entry>
        <entry>"1"</entry>
        <entry>PHP_INI_SYSTEM</entry>
        <entry>Disponível desde PHP 4.2.0. PHP_INI_ALL prior to PHP 5.2.1.</entry>
       </row>
       <row>
        <entry><link linkend="ini.cgi.redirect-status-env">cgi.redirect_status_env</link></entry>
        <entry>NULL</entry>
        <entry>PHP_INI_SYSTEM</entry>
        <entry>Disponível desde PHP 4.2.0. PHP_INI_ALL prior to PHP 5.2.1.</entry>
       </row>
       <row>
        <entry><link linkend="ini.cgi.rfc2616-headers">cgi.rfc2616_headers</link></entry>
        <entry>"0"</entry>
        <entry>PHP_INI_ALL</entry>
        <entry>Disponível desde PHP 4.3.0.</entry>
       </row>
       <row>
        <entry><link linkend="ini.fastcgi.impersonate">fastcgi.impersonate</link></entry>
        <entry>"0"</entry>
        <entry>PHP_INI_SYSTEM</entry>
        <entry>Disponível desde PHP 4.3.0. PHP_INI_ALL prior to PHP 5.2.1.</entry>
       </row>
       <row>
        <entry><link linkend="ini.fastcgi.logging">fastcgi.logging</link></entry>
        <entry>"1"</entry>
        <entry>PHP_INI_SYSTEM</entry>
        <entry>Disponível desde PHP 4.3.0. PHP_INI_ALL prior to PHP 5.2.1.</entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </para>
   
   &ini.descriptions.title;
   
   <para>
    <variablelist>
     <varlistentry xml:id="ini.include-path">
      <term>
       <parameter>include_path</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        Specifies a list of directories where the
        <function>require</function>, <function>include</function>,
        <function>fopen</function>, <function>file</function>,
        <function>readfile</function> and <function>file_get_contents</function>
        functions look for files.  The format is like the system's
        <envar>PATH</envar> environment variable: a list of directories
        separated with a colon in Unix or semicolon in Windows.
       </para>
       <para>
        PHP considers each entry in the include path separately when looking for
        files to include. It will check the first path, and if it doesn't find
        it, check the next path, until it either locates the included file or
        returns with a 
        <link linkend="errorfunc.constants.errorlevels.e-warning">warning</link>
        or an <link linkend="errorfunc.constants.errorlevels.e-error">error</link>. 
        You may modify or set your include path at runtime using
        <function>set_include_path</function>.
       </para>
       <para>
        <example>
         <title>Unix include_path</title>
         <programlisting role="php.ini">
<![CDATA[
include_path=".:/php/includes"
]]>
         </programlisting>
        </example>
       </para>
       <para>
        <example>
         <title>Windows include_path</title>
         <programlisting role="php.ini">
<![CDATA[
include_path=".;c:\php\includes"
]]>
         </programlisting>
        </example>
       </para>
       <para>
        Using a <literal>.</literal> in the include path allows for
        relative includes as it means the current directory.  However,
        it is more efficient to explicitly use <literal>include
        './file'</literal> than having PHP always check the current
        directory for every include.
       </para>
       <note>
        <para>
         <literal>ENV</literal> variables are also accessible in .ini files.
         As such it is possible to reference the home directory using
         <literal>${LOGIN}</literal> and <literal>${USER}</literal>.
        </para>
        <para>
         Environment variables may vary between Server APIs as those environments
         may be different.
        </para>       
       </note>
       <para>
        <example>
         <title>Unix include_path using ${USER} env variable</title>
         <programlisting role="php.ini">
<![CDATA[
include_path = ".:${USER}/pear/php"
]]>
         </programlisting>
        </example>
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.open-basedir">
      <term>
       <parameter>open_basedir</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        Limit the files that can be opened by PHP to the specified
        directory-tree, including the file itself.  This directive 
        is <emphasis>NOT</emphasis> affected by whether Safe Mode is 
        turned On or Off.
       </para>
       <para>
        When a script tries to open a file with, for example,
        <function>fopen</function> or <function>gzopen</function>,
        the location of the file is checked. When the file is outside the
        specified directory-tree, PHP will refuse to open it. All symbolic
        links are resolved, so it's not possible to avoid this restriction
        with a symlink. If the file doesn't exist then the symlink couldn't be
        resolved and the filename is compared to (a resolved)
        <option>open_basedir</option>.
       </para>
       <para>
        The special value <systemitem class="filesystem">.</systemitem>
        indicates that the working directory of the script will be used as the
        base-directory. This is, however, a little dangerous as the working directory
        of the script can easily be changed with <function>chdir</function>.
       </para>
       <para>
        In <filename>httpd.conf</filename>, <option>open_basedir</option> can be turned off
        (e.g. for some virtual hosts)
        <link linkend="configuration.changes.apache">the same way</link> as
        any other configuration directive with "<literal>php_admin_value open_basedir
        none</literal>".
       </para>
       <para>
        Under Windows, separate the directories with a semicolon. On all
        other systems, separate the directories with a colon. As an Apache
        module, <option>open_basedir</option> paths from parent directories are now
        automatically inherited.
       </para>
       <para>
        The restriction specified with <option>open_basedir</option> is a
        directory name since PHP 5.2.16 and 5.3.4. Previous versions used it
        as a prefix. This means that "<literal>open_basedir
        = /dir/incl</literal>" also allowed access to "<literal>/dir/include</literal>" and
        "<literal>/dir/incls</literal>" if they exist. When you want to restrict access
        to only the specified directory, end with a slash. For example:
        <literal>open_basedir = /dir/incl/</literal>
       </para>
       <para>
        The default is to allow all files to be opened.
       </para>
       <note>
        <para>
         As of PHP 5.3.0 open_basedir can be tightened at run-time. This means
         that if open_basedir is set to <literal>/www/</literal> in &php.ini;
         a script can tighten the configuration to
         <literal>/www/tmp/</literal> at run-time with
         <function>ini_set</function>. When listing several directories, you
         can use the <constant>PATH_SEPARATOR</constant> constant as a separator
         regardless of the operating system.
        </para>
       </note>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.doc-root">
      <term>
       <parameter>doc_root</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        PHP's "root directory" on the server. Only used if
        non-empty. If PHP is configured with &safemode;, no files outside
        this directory are served.
        If PHP was not compiled with FORCE_REDIRECT, you <emphasis>should
        </emphasis> set doc_root if you are running PHP as a CGI under any web
        server (other than IIS). The alternative is to use the
        <link linkend="ini.cgi.force-redirect">
         cgi.force_redirect</link> configuration below.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.user-dir">
      <term>
       <parameter>user_dir</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        The base name of the directory used on a user's home directory for PHP
        files, for example <filename class="directory">public_html
        </filename>.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.extension-dir">
      <term>
       <parameter>extension_dir</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        In what directory PHP should look for dynamically loadable
        extensions. See also: <link linkend="ini.enable-dl">enable_dl</link>,
        and <function>dl</function>.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.extension">
      <term>
       <parameter>extension</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        Which dynamically loadable extensions to load when PHP starts up.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.zend-extension">
      <term>
       <parameter>zend_extension</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        Absolute path to dynamically loadable Zend extension (for example
        <link linkend="book.apd">APD</link>) to load when PHP starts up.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.zend-extension-debug">
      <term>
       <parameter>zend_extension_debug</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        Variant of <link linkend="ini.zend-extension">zend_extension</link>
        for extensions compiled with debug info prior to PHP 5.3.0.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.zend-extension-debug-ts">
      <term>
       <parameter>zend_extension_debug_ts</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        Variant of <link linkend="ini.zend-extension">zend_extension</link>
        for extensions compiled with debug info and thread safety prior to PHP
        5.3.0.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.zend-extension-ts">
      <term>
       <parameter>zend_extension_ts</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        Variant of <link linkend="ini.zend-extension">zend_extension</link>
        for extensions compiled with thread safety prior to PHP 5.3.0.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.cgi.check-shebang-line">
      <term>
       <parameter>cgi.check_shebang_line</parameter>
       <type>boolean</type>
      </term>
      <listitem>
       <para>
        Controls whether <acronym>CGI</acronym> PHP checks for line starting
        with <literal>#!</literal> (shebang) at the top of the running script.
        This line might be needed if the script support running both as
        stand-alone script and via PHP <acronym>CGI</acronym>. PHP in
        <acronym>CGI</acronym> mode skips this line and ignores its content if
        this directive is turned on.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.cgi.fix-pathinfo">
      <term>
       <parameter>cgi.fix_pathinfo</parameter>
       <type>boolean</type>
      </term>
      <listitem>
       <para>
        Provides <emphasis>real</emphasis> <literal>PATH_INFO</literal>/
        <literal>PATH_TRANSLATED</literal> support for <acronym>CGI</acronym>.
        PHP's previous behaviour was to set <literal>PATH_TRANSLATED</literal>
        to <literal>SCRIPT_FILENAME</literal>, and to not grok what <literal>
        PATH_INFO</literal> is. For more information on
        <literal>PATH_INFO</literal>, see the <acronym>CGI</acronym> specs.
        Setting this to <literal>1</literal> will cause PHP
        <acronym>CGI</acronym> to fix its paths to conform to the spec. A
        setting of zero causes PHP to behave as before. It is turned on by
        default. You should fix your scripts to use
        <literal>SCRIPT_FILENAME</literal> rather than
        <literal>PATH_TRANSLATED</literal>.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.cgi.force-redirect">
      <term>
       <parameter>cgi.force_redirect</parameter>
       <type>boolean</type>
      </term>
      <listitem>
       <para>
        cgi.force_redirect is necessary to provide security running PHP as a
        <acronym>CGI</acronym> under most web servers. Left undefined, PHP
        turns this on by default. You can turn it off <emphasis>at your own
        risk</emphasis>.
       </para>
       <note>
        <para>
         Windows Users: When using IIS this option <emphasis>must</emphasis>
         be turned off. For OmniHTTPD or Xitami the same applies.
        </para>
       </note>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.cgi.redirect-status-env">
      <term>
       <parameter>cgi.redirect_status_env</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        If cgi.force_redirect is turned on, and you are not running under
        Apache or Netscape (iPlanet) web servers, you <emphasis>may</emphasis>
        need to set an environment variable name that PHP will look for to
        know it is OK to continue execution.
       </para>
       <note>
        <para>
         Setting this variable <emphasis>may</emphasis> cause security issues,
         <emphasis>know what you are doing first</emphasis>.
        </para>
       </note>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.cgi.rfc2616-headers">
      <term>
       <parameter>cgi.rfc2616_headers</parameter>
       <type>int</type>
      </term>
      <listitem>
      <para>
        Tells PHP what type of headers to use when sending HTTP response
        code. If it's set to 0, PHP sends a <link xlink:href="&url.rfc;3875">RFC 3875</link> 
        "Status:" header that is supported by Apache and other web servers. When this option 
        is set to 1, PHP will send <link xlink:href="&url.rfc;2616">RFC 2616</link> compliant
        headers.  
       </para>
       <para>
        If this option is enabled, and you are running PHP in a CGI environment (e.g. PHP-FPM)
        you should not use standard RFC 2616 style HTTP status response headers, you should 
        instead use their RFC 3875 equivalent e.g. instead of header("HTTP/1.0 404 Not found"); 
        you should use header("Status: 404 Not Found");
       </para>
       <para>
        Leave it set to 0 unless you know what you're doing.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.fastcgi.impersonate">
      <term>
       <parameter>fastcgi.impersonate</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        FastCGI under IIS (on WINNT based OS) supports the ability to impersonate
        security tokens of the calling client. This allows IIS to define the
        security context that the request runs under. mod_fastcgi under Apache
        does not currently support this feature (03/17/2002)
        Set to 1 if running under IIS. Default is zero.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.fastcgi.logging">
      <term>
       <parameter>fastcgi.logging</parameter>
       <type>boolean</type>
      </term>
      <listitem>
       <para>
        Turns on SAPI logging when using FastCGI. Default is 
        to enable logging.
       </para>
      </listitem>
     </varlistentry>
     
    </variablelist>
   </para>
  </section>
  
  <section xml:id="ini.sect.file-uploads">
   <title>File Uploads</title>
   <para>
    <table>
     <title>File Uploads Configuration Options</title>
     <tgroup cols="4">
      <thead>
       <row>
        <entry>&Name;</entry>
        <entry>&Default;</entry>
        <entry>&Changeable;</entry>
        <entry>&Changelog;</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry><link linkend="ini.file-uploads">file_uploads</link></entry>
        <entry>"1"</entry>
        <entry>PHP_INI_SYSTEM</entry>
        <entry>PHP_INI_ALL in PHP &lt;= 4.2.3. Disponível desde PHP 4.0.3.</entry>
       </row>
       <row>
        <entry><link linkend="ini.upload-tmp-dir">upload_tmp_dir</link></entry>
        <entry>NULL</entry>
        <entry>PHP_INI_SYSTEM</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.max-input-nesting-level">max_input_nesting_level</link></entry>
        <entry>64</entry>
        <entry>PHP_INI_PERDIR</entry>
        <entry>Disponível desde PHP 5.3.9.</entry>
       </row>
       <row>
        <entry><link linkend="ini.max-input-vars">max_input_vars</link></entry>
        <entry>1000</entry>
        <entry>PHP_INI_PERDIR</entry>
        <entry>Disponível desde PHP 5.3.9.</entry>
       </row>
       <row>
        <entry><link linkend="ini.upload-max-filesize">upload_max_filesize</link></entry>
        <entry>"2M"</entry>
        <entry>PHP_INI_PERDIR</entry>
        <entry>PHP_INI_ALL in PHP &lt;= 4.2.3.</entry>
       </row>
       <row>
        <entry><link linkend="ini.max-file-uploads">max_file_uploads</link></entry>
        <entry>20</entry>
        <entry>PHP_INI_SYSTEM</entry>
        <entry>Disponível desde PHP 5.2.12.</entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </para>
   
   &ini.descriptions.title;
   
   <para>
    <variablelist>
     <varlistentry xml:id="ini.file-uploads">
      <term>
       <parameter>file_uploads</parameter>
       <type>boolean</type>
       or <type>integer</type>
      </term>
      <listitem>
       <para>
        Whether or not to allow HTTP
        <link linkend="features.file-upload">file uploads</link>. See also the
        <link linkend="ini.upload-max-filesize">upload_max_filesize</link>,
        <link linkend="ini.upload-tmp-dir">upload_tmp_dir</link>, and
        <link linkend="ini.post-max-size">post_max_size</link> directives.
       </para>
       
       &ini.shorthandbytes;
       
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.upload-tmp-dir">
      <term>
       <parameter>upload_tmp_dir</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        The temporary directory used for storing files when doing
        file upload. Must be writable by whatever user PHP
        is running as. If not specified PHP will use the system's default.
       </para>
       <para>
        If the directory specified here is not writable, PHP falls back to 
        the system default temporary directory. If 
        <link linkend="ini.open-basedir">open_basedir</link> is on, then 
        the system default directory must be allowed for an upload to 
        succeed.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.upload-max-filesize">
      <term>
       <parameter>upload_max_filesize</parameter>
       <type>integer</type>
      </term>
      <listitem>
       <para>
        The maximum size of an uploaded file.
       </para>
       
       &ini.shorthandbytes;
       
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.max-file-uploads">
      <term>
       <parameter>max_file_uploads</parameter>
       <type>integer</type>
      </term>
      <listitem>
       <para>
        The maximum number of files allowed to be uploaded simultaneously.
        Starting with PHP 5.3.4, upload fields left blank on submission do not
        count towards this limit.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>
  </section>
  
  <section xml:id="ini.sect.sql-general">
   <title>General SQL</title>
   <para>
    <table>
     <title>General SQL Configuration Options</title>
     <tgroup cols="4">
      <thead>
       <row>
        <entry>&Name;</entry>
        <entry>&Default;</entry>
        <entry>&Changeable;</entry>
        <entry>&Changelog;</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry><link linkend="ini.sql.safe-mode">sql.safe_mode</link></entry>
        <entry>"0"</entry>
        <entry>PHP_INI_SYSTEM</entry>
        <entry></entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </para>
   
   &ini.descriptions.title;
   
   <para>
    <variablelist>
     <varlistentry xml:id="ini.sql.safe-mode">
      <term>
       <parameter>sql.safe_mode</parameter>
       <type>boolean</type>
      </term>
      <listitem>
       <para>
        If turned on, database connect functions that specify default values
        will use those values in place of supplied arguments. For default
        values see connect function documentation for the relevant database.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>
  </section>
  
  <section xml:id="ini.sect.windows">
   <title>Windows Specific</title>
   <para>
    <table>
     <title>Windows Specific Configuration Options</title>
     <tgroup cols="4">
      <thead>
       <row>
        <entry>&Name;</entry>
        <entry>&Default;</entry>
        <entry>&Changeable;</entry>
        <entry>&Changelog;</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry><link linkend="ini.windows-show-crt-warning">windows_show_crt_warning</link></entry>
        <entry>"0"</entry>
        <entry>PHP_INI_ALL</entry>
        <entry>Disponível desde PHP 5.4.0.</entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </para>
   
   &ini.descriptions.title;
   
   <para>
    <variablelist>
     <varlistentry xml:id="ini.windows-show-crt-warning">
      <term>
       <parameter>windows_show_crt_warning</parameter>
       <type>boolean</type>
      </term>
      <listitem>
       <para>
        This directive shows the Windows CRT warnings when enabled. These
        warnings were displayed by default until PHP 5.4.0.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>
  </section>
  
 </section>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
