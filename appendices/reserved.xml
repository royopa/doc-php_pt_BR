<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: 321886 Maintainer: felipe Status: ready -->
<!-- CREDITS: ae, thiago -->
 <appendix xml:id="reserved" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>Palavras reservadas do PHP</title>
  <para>
   Esta é uma lista de identificadores predefinidos do PHP. Nenhum
   dos nomes listados aqui pode ser utilizado como seus identificadores em nenhum
   script. Esta lista inclui palavras-chave e variáveis pré-definidas,
   constantes e nomes de classes. Esta lista ainda não está
   completa.
  </para>

  <sect1 xml:id="reserved.keywords">
  <title>Lista de palavras-chave (keywords)</title>
   <simpara>
    Estas palavras tem um significado especial no PHP. Algumas delas representam coisas
    que parecem funções, algumas parecem constantes mas na verdade não o são
    realmente: elas são construtores de linguagem. Você não pode usar nenhuma
    das seguintes palavras como constantes, nomes de classes, de funções ou de métodos.
    Utilizar como nome de variáveis geralmente não causa erros, mas pode levar a confusão.
   </simpara>

   <table>
    <title>Palavras-chave do PHP</title>
    <tgroup cols="4">
     <tbody>
      <row>
       <entry>
        <link linkend="language.oop5.abstract">abstract</link> (a partir do PHP 5)
       </entry>
       <entry>
        <link linkend="language.operators.logical">and</link>
       </entry>
       <entry>
        <function>array</function>
       </entry>
       <entry>
        <link linkend="control-structures.foreach">as</link>
       </entry>
       <entry>
        <link linkend="control-structures.break">break</link>
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="control-structures.switch">case</link>
       </entry>
       <entry>
        <link linkend="language.exceptions">catch</link> (as of PHP 5)
       </entry>
       <entry>
        cfunction (PHP 4 only)
       </entry>
       <entry>
        <link linkend="keyword.class">class</link>
       </entry>
       <entry>
        <link linkend="language.oop5.cloning">clone</link> (as of PHP 5)
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="language.oop5.constants">const</link>
       </entry>
       <entry>
        <link linkend="control-structures.continue">continue</link>
       </entry>
       <entry>
        <link linkend="control-structures.declare">declare</link>
       </entry>
       <entry>
        <link linkend="control-structures.switch">default</link>
       </entry>
       <entry>
        <link linkend="control-structures.do.while">do</link>
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="control-structures.else">else</link>
       </entry>
       <entry>
        <link linkend="control-structures.elseif">elseif</link>
       </entry>
       <entry>
        <link linkend="control-structures.declare">enddeclare</link>
       </entry>
       <entry>
        <link linkend="control-structures.alternative-syntax">endfor</link>
       </entry>
       <entry>
        <link linkend="control-structures.alternative-syntax">endforeach</link>
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="control-structures.alternative-syntax">endif</link>
       </entry>
       <entry>
        <link linkend="control-structures.alternative-syntax">endswitch</link>
       </entry>
       <entry>
        <link linkend="control-structures.alternative-syntax">endwhile</link>
       </entry>
       <entry>
        <link linkend="keyword.class">extends</link>
       </entry>
       <entry>
        <link linkend="language.oop5.final">final</link> (as of PHP 5)
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="control-structures.for">for</link>
       </entry>
       <entry>
        &foreach;
       </entry>
       <entry>
        <link linkend="functions.user-defined">function</link>
       </entry>
       <entry>
        <link linkend="language.variables.scope">global</link>
       </entry>
       <entry>
         <link linkend="control-structures.goto">goto</link> (apartir do PHP 5.3)
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="control-structures.if">if</link>
       </entry>
       <entry>
        <link linkend="language.oop5.interfaces">implements</link> (a partir do PHP 5)
       </entry>
       <entry>
        <link linkend="language.oop5.interfaces">interface</link> (a partir do PHP 5)
       </entry>
       <entry>
        <link linkend="language.operators.type">instanceof</link> (a partir do PHP 5)
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="language.namespaces">namespace</link> (a partir do PHP 5.3)
       </entry>
       <entry>
        <link linkend="keyword.class">new</link>
       </entry>
       <entry>
        old_function (PHP 4 somente)
       </entry>
       <entry>
        <link linkend="language.operators.logical">or</link>
       </entry>
       <entry>
        <link linkend="language.oop5.visibility">private</link> (a partir do PHP 5)
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="language.oop5.visibility">protected</link> (a partir do PHP 5)
       </entry>
       <entry>
        <link linkend="language.oop5.visibility">public</link> (a partir do PHP 5)
       </entry>
       <entry>
        <link linkend="language.variables.scope">static</link>
       </entry>
       <entry>
        <link linkend="control-structures.switch">switch</link>
       </entry>
       <entry>
        <link linkend="language.exceptions">throw</link> (a partir do PHP 5)
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="language.exceptions">try</link> (a partir do PHP 5)
       </entry>
       <entry>
        <link linkend="language.namespaces">use</link>
       </entry>
       <entry>
        <link linkend="keyword.class">var</link>
       </entry>
       <entry>
        <link linkend="control-structures.while">while</link>
       </entry>
       <entry>
        <link linkend="language.operators.logical">xor</link>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
   <table>
    <title>Constantes Compile-time</title>
    <tgroup cols="5">
     <tbody>
      <row>
       <entry>
        <link linkend="language.constants.predefined">__CLASS__</link>
       </entry>
       <entry>
        <link linkend="language.constants.predefined">__DIR__</link> (no PHP 5.3)
       </entry>
       <entry>
        <link linkend="language.constants.predefined">__FILE__</link>
       </entry>
       <entry>
        <link linkend="language.constants.predefined">__LINE__</link>        
       </entry>
       <entry>
        <link linkend="language.constants.predefined">__FUNCTION__</link>
       </entry>
       <entry>
        <link linkend="language.constants.predefined">__METHOD__</link>
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="language.namespaces">__NAMESPACE__</link> (a partir do PHP 5.3)
       </entry>
       <entry>
       </entry>
       <entry>
       </entry>
       <entry>
       </entry>
       <entry>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
   <table>
    <title>Construtores da linguagem</title>
    <tgroup cols="5">
     <tbody>
      <row>
       <entry>
        <function>die</function>
       </entry>
       <entry>
        <function>echo</function>
       </entry>
       <entry>
        <function>empty</function>
       </entry>
       <entry>
        <function>exit</function>
       </entry>
       <entry>
        <function>eval</function>
       </entry>
      </row>
      <row>
       <entry>
        <function>include</function>
       </entry>
       <entry>
        <function>include_once</function>
       </entry>
       <entry>
        <function>isset</function>
       </entry>
       <entry>
        <function>list</function>
       </entry>
       <entry>
        <function>require</function>
       </entry>
      </row>
      <row>
       <entry>
        <function>require_once</function>
       </entry>
       <entry>
        <function>return</function>
       </entry>
       <entry>
        <function>print</function>
       </entry>
       <entry>
        <function>unset</function>
       </entry>
       <entry>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </sect1>

  <sect1 xml:id="reserved.classes">
   <title>Classes pré-definidas</title>
   <para>
    Esta seção lista classes pré-definidas padrão. Diversas extensões
    definem outras classes como são descritas em suas referências.
   </para>
   
   <sect2 xml:id="reserved.classes.standard">
    <title>Classes padrão</title>

    <simpara>
     Estas classes são definidas dentro do conjunto padrão de funções incluídas
     na compilação do PHP.
    </simpara>

    <variablelist>
     <varlistentry>
      <term><classname>Directory</classname></term>
      <listitem>
       <simpara>
        Criada pela função <function>dir</function>.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>stdClass</classname></term>
      <listitem>
       <simpara>
        Criada quando é feito <link linkend="language.types.object.casting">typecasting
        para objeto</link>.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>__PHP_Incomplete_Class</classname></term>
      <listitem>
       <simpara>
        Possivelmente criado por <function>unserialize</function>.
       </simpara>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect2>

   <sect2 xml:id="reserved.classes.php5">
    <title>Classes Pré-definidas no PHP 5</title>

    <simpara>
     Essas classes pré-definidas adicionais foram introduzidas no
     PHP 5.0.0
    </simpara>

    <variablelist>
     <varlistentry>
      <term><classname>exception</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>php_user_filter</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect2>
   
  <sect2 xml:id="reserved.classes.closure">
   <title>Closure</title>
   
   <simpara>
    A classe pré-definida final <classname>Closure</classname> foi indroduzida
    no PHP 5.3.0. É usada para a representação de <link
    linkend="functions.anonymous">anonymous functions</link>.
   </simpara>
   <simpara>
    Para mais informações, veja a <link linkend="class.closure">página da 
    classe</link>.
   </simpara>
  </sect2>
        
   <sect2 xml:id="reserved.classes.special">
    <title>Classes especiais</title>
    
    <simpara>
     Os seguintes identificadores não podem ser usados como nome de classe, como
     eles possuem um propósito especial.
    </simpara>
    
    <variablelist>
     <varlistentry>
      <term><classname>self</classname></term>
      <listitem>
       <simpara>
        <link linkend="language.oop5.paamayim-nekudotayim">Classe
        atual</link>.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>static</classname></term>
      <listitem>
       <simpara>
        <link linkend="language.oop5.late-static-bindings">Classe atual em 
         tempo de execução</link>.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>parent</classname></term>
      <listitem>
       <simpara>
        <link linkend="language.oop5.paamayim-nekudotayim">Classe pai</link>
        .
       </simpara>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect2>

  </sect1>

  &appendices.reserved.constants;

</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
