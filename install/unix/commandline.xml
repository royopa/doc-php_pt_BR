<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: 297028 Maintainer: narigone Status: ready -->
  <sect1 xml:id="install.unix.commandline" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
   <title>CGI e instalações de linha de comando</title>
   <para>
    O padrão é compilar o PHP como um programa CGI. Isso cria um
    interpretador de linha de comando, que pode ser usado para processamento de CGI, ou
    para criação de scripts não relacionados com a web. Se você estiver executando um 
    servidor web que suporta o PHP como módulo, você deve geralmente usar essa opção
    por razões de performance. No entanto, a versão CGI permite
    que usuários executem diferentes páginas com PHP usando
    diferentes ids de usuário.
   </para>
   &warn.install.cgi;
   <para>
    A partir do PHP 4.3.0, alguns acréscimos importentes aconteceram ao PHP. Um novo
    SAPI chamado CLI também existe e ele tem o mesmo nome que o binário CGI.
    O que é instalado no diretório <literal>{PREFIX}/bin/php</literal> depende das
    opções usadas com o comando configure e é descrito com mais detalhes na seção do manual
    chamada <link linkend="features.commandline">Usando o PHP da linha de 
    comando</link>. Para mais detalhes, por favor, leia essa seção do manual.
   </para>
   
   <sect2 xml:id="install.unix.commandline.testing">
    <title>Testando</title>
    <simpara>
     Se você compilou o PHP como um programa CGI, você pode testá-lo
     usando o comando <command>make test</command>. É sempre uma boa idéia
     testar os software que você compila. Dessa maneira, você pode achar um problema
     com o PHP na sua plataforma cedo, ao invés de ter de lidar com isso mais tarde.
    </simpara>
   </sect2>
   
   <sect2 xml:id="install.unix.commandline.using-variables">
    <title>Usando Variáveis</title>
    <simpara>
      Algumas <link linkend="reserved.variables.server">variáveis de ambientes 
      fornecidas pelo servidor</link> não são definidas na
      atual <link xlink:href="&url.cgispec;">especificação CGI/1.1</link>.
      Apenas as seguintes variáveis são definidas lá: <varname>AUTH_TYPE</varname>, 
      <varname>CONTENT_LENGTH</varname>, <varname>CONTENT_TYPE</varname>,
      <varname>GATEWAY_INTERFACE</varname>, <varname>PATH_INFO</varname>, 
      <varname>PATH_TRANSLATED</varname>, <varname>QUERY_STRING</varname>,
      <varname>REMOTE_ADDR</varname>, <varname>REMOTE_HOST</varname>, 
      <varname>REMOTE_IDENT</varname>, <varname>REMOTE_USER</varname>,
      <varname>REQUEST_METHOD</varname>, <varname>SCRIPT_NAME</varname>, 
      <varname>SERVER_NAME</varname>, <varname>SERVER_PORT</varname>,
      <varname>SERVER_PROTOCOL</varname>, e <varname>SERVER_SOFTWARE</varname>.
      Todo o resto deve ser tratado como 'vendor extensions'.
    </simpara>
   </sect2>
   
  </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
