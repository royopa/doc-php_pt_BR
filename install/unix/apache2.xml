<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: n/a Maintainer: narigone Status: ready -->
<!-- CREDITS: ernani -->
   <sect1 xml:id="install.unix.apache2" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
    <title>Apache 2.0 em sistemas Unix</title>
    <para>
     Essa seção contém notas e dicas específicas para a instalação do Apache 2.0
     com o PHP em sistemas Unix.
    </para>

    &warn.apache2.compat;

    <para>
     Recomendamos a 
     <link xlink:href="&url.apache2.docs;">Documentação do Apache</link> para obter
     um entendimento básico do servidor Apache 2.0.
    </para>

    &install.snippet.apache2.compat;

    <para>
     Baixe a versão mais recente do <link xlink:href= "&url.apache;">
     Apache 2.0</link> e uma versão adequada do PHP dos lugares mencionados acima.
     Esse guia rápido cobre apenas o básico para para começar a usar o Apache 2.0
     e o PHP. Para mais informação, leia a
     <link xlink:href="&url.apache2.docs;">Documentação do Apache</link>
     Os número de versão foram omitidos para assegurar que
     as instruções não estejam incorretas. Você precisará substituir o
     'NN' com os valores corretos dos seus arquivos.
    </para>
    <example>
     <title>
      Instruções de Instalação (Versão de Módulo Compartilhado do Apache 2)
     </title>
     <screen>
<![CDATA[
1.  gzip -d httpd-2_0_NN.tar.gz
2.  tar xvf httpd-2_0_NN.tar
3.  gunzip php-NN.tar.gz
4.  tar -xvf php-NN.tar
5.  cd httpd-2_0_NN
6.  ./configure --enable-so
7.  make
8.  make install

    Agora você tem o Apache 2.0.NN disponível no diretório /usr/local/apache2,
    configurado com suporte a módulo compartilhado e o prefork MPM padrão.
    Para testar a instalação use o procedimento normal para iniciar
    o servidor Apache, ex.:
    /usr/local/apache2/bin/apachectl start
    e pare o servidor para ir para a configuração do PHP:
    /usr/local/apache2/bin/apachectl stop.

9.  cd ../php-NN

10. Agora, configure o seu PHP. É aqui que você personaliza seu PHP
    com várias opções, como quais extensões serão habilitadas. Execute o
    comando ./configure --help para uma lista das opções disponíveis. No nosso exemplo
    nós faremos uma simples configuração com Apache 2 e suporte ao MySQL. Seu caminho
    para o arquivo apxs pode ser diferente do exemplo. De fato, o binário pode até ser
    chamado de apxs2 no seu sistema.

      ./configure --with-apxs2=/usr/local/apache2/bin/apxs --with-mysql

11. make
12. make install

    Se você decidir mudar as opções de seu configure depois da instalação
    você precisará somente repetir os últimos 3 passos. Você somente precisará
    reiniciar o Apache para o novo módulo funcionar. Não será necessário recompilar
    o Apache.

    Note que, por padrão, 'make install' também instalará PEAR, além
    de várias ferramentas do PHP como phpize, instalar o CLI do PHP e mais.

13. Configurando seu arquivo php.ini:

    cp php.ini-dist /usr/local/lib/php.ini

    Você pode editar o seu arquivo .ini para configurar as opções do PHP.  Se
    você preferir que este arquivo fique em outro lugar, use a opção
    --with-config-file-path=/caminho no passo 10.

    Se ao invés de escolher o arquivo php.ini-dist, você escolher o arquivo php.ini-recommended,
    leia a lista de mudanças dentro do mesmo, uma vez que elas afetam a maneira como o PHP se comporta.

14. Edite o seu arquivo httpd.conf para carregar o módulo do PHP. O caminho no lado direito
    do comando LoadModule deve apontar para para o caminho do módulo PHP no seu sistema.
    O comando make install acima já deve ter adicionado estas linhas, mas tenha certeza
    de que as linhas abaixo foram adicionadas ao arquivo.

    Para o PHP 4:

      LoadModule php4_module libexec/libphp4.so

    Para o PHP 5:

      LoadModule php5_module libexec/libphp5.so

15. Diga ao Apache para avaliar certas extensões como PHP. Por exemplo,
    vamos fazer o Apache interpretar a extensão .php como um script PHP. Você poderia
    ter qualquer extensão(ões) avaliadas como PHP simplesmente adicionando-as, com
    cada uma separada por um espaço. Vamos adicionar .phtml para demonstrar.

      AddType application/x-httpd-php .php .phtml

    Também é comum configurar a extensão .phps para mostrar o código-fonte
    do script PHP com highlight, isso pode ser feito com:

      AddType application/x-httpd-php-source .phps

16. Use seu procedimento normal para iniciar o servidor Apache ex.:

      /usr/local/apache2/bin/apachectl start

]]>

      </screen>
     </example>
    <para>
     Seguindo os passos acima você terá rodando o Apache 2.0 com
     suporte para o PHP como um módulo <literal>SAPI</literal>.
     Claro que existem muitas outras opções de configuração disponível para ambos,
     Apache e o PHP. Para mais informações use o comando
     <command>./configure --help</command> na árvore de arquivos fontes
     correspondente. Caso você desejar compilar uma versão multithreaded do Apache 2.0,
     você deve sobrescrever o Módulo-MPM padrão <filename>prefork</filename>
     ou com o módulo <filename>worker</filename> ou com o <filename>perchild</filename>.
     Para fazer isso, acrescente ao comando configure no passo 6 acima a opção
     <option role="configure">--with-mpm=worker</option> ou
     <option role="configure">--with-mpm=perchild</option>. Tome cuidado com
     as consequências e entenda o que está fazendo. Para mais informações,
     leia a documentação do Apache sobre os <link xlink:href="&url.apache2.mpm;">
     Módulos-MPM</link>.
    </para>
    <note>
     <para>
      Se você quiser usar negociação de conteúdo, leia o
      <link linkend="faq.installation.apache.multiviews">FAQ relacionado à
      MultiViews</link>.
     </para>
    </note>
    <note>
     <para>
      Para compilar uma versão multithreaded do Apache, seu sistema deve suportar threads.
      Isso também implica compilar o PHP com o Zend Thread Safety (ZTS)
      experimental. Portanto, nem todas as extensões podem estar disponíveis.
      A configuração recomendada para compilar o Apache é com o Módulo-MPM
      <filename>prefork</filename> padrão.
     </para>
    </note>
   </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
